{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar _gracefulFs;\nfunction _load_gracefulFs() {\n  return _gracefulFs = _interopRequireDefault(require('graceful-fs'));\n}\nvar _callsites;\nfunction _load_callsites() {\n  return _callsites = _interopRequireDefault(require('callsites'));\n}\nvar _sourceMap;\nfunction _load_sourceMap() {\n  return _sourceMap = require('source-map');\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n// Copied from https://github.com/rexxars/sourcemap-decorate-callsites/blob/5b9735a156964973a75dc62fd2c7f0c1975458e8/lib/index.js#L113-L158\n/**\n * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n */\n\nvar addSourceMapConsumer = function addSourceMapConsumer(callsite, consumer) {\n  var getLineNumber = callsite.getLineNumber;\n  var getColumnNumber = callsite.getColumnNumber;\n  var position = null;\n  function getPosition() {\n    if (!position) {\n      position = consumer.originalPositionFor({\n        column: getColumnNumber.call(callsite),\n        line: getLineNumber.call(callsite)\n      });\n    }\n    return position;\n  }\n  Object.defineProperties(callsite, {\n    getColumnNumber: {\n      value: function value() {\n        return getPosition().column || getColumnNumber.call(callsite);\n      },\n      writable: false\n    },\n    getLineNumber: {\n      value: function value() {\n        return getPosition().line || getLineNumber.call(callsite);\n      },\n      writable: false\n    }\n  });\n};\nexports.default = function (level, sourceMaps) {\n  var levelAfterThisCall = level + 1;\n  var stack = (0, (_callsites || _load_callsites()).default)()[levelAfterThisCall];\n  var sourceMapFileName = sourceMaps && sourceMaps[stack.getFileName()];\n  if (sourceMapFileName) {\n    try {\n      var sourceMap = (_gracefulFs || _load_gracefulFs()).default.readFileSync(sourceMapFileName, 'utf8');\n      addSourceMapConsumer(stack, new (_sourceMap || _load_sourceMap()).SourceMapConsumer(sourceMap));\n    } catch (e) {\n      // ignore\n    }\n  }\n  return stack;\n};","map":null,"metadata":{},"sourceType":"script"}