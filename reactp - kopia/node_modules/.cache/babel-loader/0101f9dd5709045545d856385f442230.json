{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\nvar _get = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar _chalk;\nfunction _load_chalk() {\n  return _chalk = _interopRequireDefault(require('chalk'));\n}\nvar _constants;\nfunction _load_constants() {\n  return _constants = require('../constants');\n}\nvar _default_reporter;\nfunction _load_default_reporter() {\n  return _default_reporter = _interopRequireDefault(require('./default_reporter'));\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n */\nvar VerboseReporter = /*#__PURE__*/function (_default) {\n  _inherits(VerboseReporter, _default);\n  function VerboseReporter(globalConfig) {\n    var _this;\n    _classCallCheck(this, VerboseReporter);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(VerboseReporter).call(this, globalConfig));\n    _this._globalConfig = globalConfig;\n    return _this;\n  }\n  _createClass(VerboseReporter, [{\n    key: \"onTestResult\",\n    value: function onTestResult(test, result, aggregatedResults) {\n      _get(_getPrototypeOf(VerboseReporter.prototype), \"testFinished\", this).call(this, test.context.config, result, aggregatedResults);\n      if (!result.skipped) {\n        this.printTestFileHeader(result.testFilePath, test.context.config, result);\n        if (!result.testExecError && !result.skipped) {\n          this._logTestResults(result.testResults);\n        }\n        this.printTestFileFailureMessage(result.testFilePath, test.context.config, result);\n      }\n      _get(_getPrototypeOf(VerboseReporter.prototype), \"forceFlushBufferedOutput\", this).call(this);\n    }\n  }, {\n    key: \"_logTestResults\",\n    value: function _logTestResults(testResults) {\n      this._logSuite(VerboseReporter.groupTestsBySuites(testResults), 0);\n      this._logLine();\n    }\n  }, {\n    key: \"_logSuite\",\n    value: function _logSuite(suite, indentLevel) {\n      var _this2 = this;\n      if (suite.title) {\n        this._logLine(suite.title, indentLevel);\n      }\n      this._logTests(suite.tests, indentLevel + 1);\n      suite.suites.forEach(function (suite) {\n        return _this2._logSuite(suite, indentLevel + 1);\n      });\n    }\n  }, {\n    key: \"_getIcon\",\n    value: function _getIcon(status) {\n      if (status === 'failed') {\n        return (_chalk || _load_chalk()).default.red((_constants || _load_constants()).ICONS.failed);\n      } else if (status === 'pending') {\n        return (_chalk || _load_chalk()).default.yellow((_constants || _load_constants()).ICONS.pending);\n      } else {\n        return (_chalk || _load_chalk()).default.green((_constants || _load_constants()).ICONS.success);\n      }\n    }\n  }, {\n    key: \"_logTest\",\n    value: function _logTest(test, indentLevel) {\n      var status = this._getIcon(test.status);\n      var time = test.duration ? \" (\".concat(test.duration.toFixed(0), \"ms)\") : '';\n      this._logLine(status + ' ' + (_chalk || _load_chalk()).default.dim(test.title + time), indentLevel);\n    }\n  }, {\n    key: \"_logTests\",\n    value: function _logTests(tests, indentLevel) {\n      var _this3 = this;\n      if (this._globalConfig.expand) {\n        tests.forEach(function (test) {\n          return _this3._logTest(test, indentLevel);\n        });\n      } else {\n        var skippedCount = tests.reduce(function (result, test) {\n          if (test.status === 'pending') {\n            result += 1;\n          } else {\n            _this3._logTest(test, indentLevel);\n          }\n          return result;\n        }, 0);\n        if (skippedCount > 0) {\n          this._logSkippedTests(skippedCount, indentLevel);\n        }\n      }\n    }\n  }, {\n    key: \"_logSkippedTests\",\n    value: function _logSkippedTests(count, indentLevel) {\n      var icon = this._getIcon('pending');\n      var text = (_chalk || _load_chalk()).default.dim(\"skipped \".concat(count, \" test\").concat(count === 1 ? '' : 's'));\n      this._logLine(\"\".concat(icon, \" \").concat(text), indentLevel);\n    }\n  }, {\n    key: \"_logLine\",\n    value: function _logLine(str, indentLevel) {\n      var indentation = '  '.repeat(indentLevel || 0);\n      this.log(indentation + (str || ''));\n    }\n  }], [{\n    key: \"filterTestResults\",\n    value: function filterTestResults(testResults) {\n      return testResults.filter(function (_ref) {\n        var status = _ref.status;\n        return status !== 'pending';\n      });\n    }\n  }, {\n    key: \"groupTestsBySuites\",\n    value: function groupTestsBySuites(testResults) {\n      var root = {\n        suites: [],\n        tests: [],\n        title: ''\n      };\n      testResults.forEach(function (testResult) {\n        var targetSuite = root;\n\n        // Find the target suite for this test,\n        // creating nested suites as necessary.\n        var _iterator = _createForOfIteratorHelper(testResult.ancestorTitles),\n          _step;\n        try {\n          var _loop = function _loop() {\n            var title = _step.value;\n            var matchingSuite = targetSuite.suites.find(function (s) {\n              return s.title === title;\n            });\n            if (!matchingSuite) {\n              matchingSuite = {\n                suites: [],\n                tests: [],\n                title: title\n              };\n              targetSuite.suites.push(matchingSuite);\n            }\n            targetSuite = matchingSuite;\n          };\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            _loop();\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        targetSuite.tests.push(testResult);\n      });\n      return root;\n    }\n  }]);\n  return VerboseReporter;\n}((_default_reporter || _load_default_reporter()).default);\nexports.default = VerboseReporter;","map":null,"metadata":{},"sourceType":"script"}