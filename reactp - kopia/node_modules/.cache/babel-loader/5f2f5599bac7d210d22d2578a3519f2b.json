{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar _jestConfig;\nfunction _load_jestConfig() {\n  return _jestConfig = require('jest-config');\n}\nvar stringifyOption = function stringifyOption(option, map) {\n  var linePrefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var optionDescription = \"  // \".concat((_jestConfig || _load_jestConfig()).descriptions[option]);\n  var stringifiedObject = \"\".concat(option, \": \").concat(JSON.stringify(map[option], null, 2));\n  return optionDescription + '\\n' + stringifiedObject.split('\\n').map(function (line) {\n    return '  ' + linePrefix + line;\n  }).join('\\n') + ',\\n';\n};\n/**\n * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n */\n\nvar generateConfigFile = function generateConfigFile(results) {\n  var typescript = results.typescript,\n    coverage = results.coverage,\n    clearMocks = results.clearMocks,\n    environment = results.environment;\n  var overrides = {};\n  if (typescript) {\n    Object.assign(overrides, {\n      globals: {\n        'ts-jest': {\n          tsConfigFile: 'tsconfig.json'\n        }\n      },\n      moduleFileExtensions: ['ts', 'tsx', 'js'],\n      testMatch: ['**/__tests__/*.+(ts|tsx|js)'],\n      transform: {\n        '^.+\\\\.(ts|tsx)$': 'ts-jest'\n      }\n    });\n  }\n  if (coverage) {\n    Object.assign(overrides, {\n      coverageDirectory: 'coverage'\n    });\n  }\n  if (environment === 'node') {\n    Object.assign(overrides, {\n      testEnvironment: 'node'\n    });\n  }\n  if (clearMocks) {\n    Object.assign(overrides, {\n      clearMocks: true\n    });\n  }\n  var overrideKeys = Object.keys(overrides);\n  var properties = [];\n  for (var option in (_jestConfig || _load_jestConfig()).descriptions) {\n    if (overrideKeys.includes(option)) {\n      properties.push(stringifyOption(option, overrides));\n    } else {\n      properties.push(stringifyOption(option, (_jestConfig || _load_jestConfig()).defaults, '// '));\n    }\n  }\n  return '// For a detailed explanation regarding each configuration property, visit:\\n' + '// https://jestjs.io/docs/en/configuration.html\\n\\n' + 'module.exports = {\\n' + properties.join('\\n') + '};\\n';\n};\nexports.default = generateConfigFile;","map":null,"metadata":{},"sourceType":"script"}