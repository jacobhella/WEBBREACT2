{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar _preRunMessage;\nfunction _load_preRunMessage() {\n  return _preRunMessage = require('../preRunMessage');\n}\nvar BaseReporter = /*#__PURE__*/function () {\n  function BaseReporter() {\n    _classCallCheck(this, BaseReporter);\n  }\n  _createClass(BaseReporter, [{\n    key: \"log\",\n    value: function log(message) {\n      process.stderr.write(message + '\\n');\n    }\n  }, {\n    key: \"onRunStart\",\n    value: function onRunStart(results, options) {\n      (0, (_preRunMessage || _load_preRunMessage()).remove)(process.stderr);\n    }\n  }, {\n    key: \"onTestResult\",\n    value: function onTestResult(test, testResult, results) {}\n  }, {\n    key: \"onTestStart\",\n    value: function onTestStart(test) {}\n  }, {\n    key: \"onRunComplete\",\n    value: function onRunComplete(contexts, aggregatedResults) {}\n  }, {\n    key: \"_setError\",\n    value: function _setError(error) {\n      this._error = error;\n    } // Return an error that occurred during reporting. This error will\n    // define whether the test run was successful or failed.\n  }, {\n    key: \"getLastError\",\n    value: function getLastError() {\n      return this._error;\n    }\n  }]);\n  return BaseReporter;\n}();\nexports.default = BaseReporter;\n/**\n * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n */","map":null,"metadata":{},"sourceType":"script"}