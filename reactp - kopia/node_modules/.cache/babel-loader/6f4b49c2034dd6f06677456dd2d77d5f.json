{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\nvar _node = require(\"debug/node\");\nvar _node2 = _interopRequireDefault(_node);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar verboseDebug = (0, _node2.default)(\"babel:verbose\");\nvar generalDebug = (0, _node2.default)(\"babel\");\nvar seenDeprecatedMessages = [];\nvar Logger = function () {\n  function Logger(file, filename) {\n    (0, _classCallCheck3.default)(this, Logger);\n    this.filename = filename;\n    this.file = file;\n  }\n  Logger.prototype._buildMessage = function _buildMessage(msg) {\n    var parts = \"[BABEL] \" + this.filename;\n    if (msg) parts += \": \" + msg;\n    return parts;\n  };\n  Logger.prototype.warn = function warn(msg) {\n    console.warn(this._buildMessage(msg));\n  };\n  Logger.prototype.error = function error(msg) {\n    var Constructor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Error;\n    throw new Constructor(this._buildMessage(msg));\n  };\n  Logger.prototype.deprecate = function deprecate(msg) {\n    if (this.file.opts && this.file.opts.suppressDeprecationMessages) return;\n    msg = this._buildMessage(msg);\n    if (seenDeprecatedMessages.indexOf(msg) >= 0) return;\n    seenDeprecatedMessages.push(msg);\n    console.error(msg);\n  };\n  Logger.prototype.verbose = function verbose(msg) {\n    if (verboseDebug.enabled) verboseDebug(this._buildMessage(msg));\n  };\n  Logger.prototype.debug = function debug(msg) {\n    if (generalDebug.enabled) generalDebug(this._buildMessage(msg));\n  };\n  Logger.prototype.deopt = function deopt(node, msg) {\n    this.debug(msg);\n  };\n  return Logger;\n}();\nexports.default = Logger;\nmodule.exports = exports[\"default\"];","map":null,"metadata":{},"sourceType":"script"}