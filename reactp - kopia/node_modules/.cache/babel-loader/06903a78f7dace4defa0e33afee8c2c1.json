{"ast":null,"code":"'use strict';\n\nvar RECRAWL_WARNINGS = []; // shared structure, one per process.\nvar REG = /Recrawled this watch (\\d+) times, most recently because:\\n([^:]+)/;\nmodule.exports = RecrawlWarning;\nfunction RecrawlWarning(root, count) {\n  this.root = root;\n  this.count = count;\n}\nRecrawlWarning.RECRAWL_WARNINGS = RECRAWL_WARNINGS;\nRecrawlWarning.REGEXP = REG;\nRecrawlWarning.findByRoot = function (root) {\n  for (var i = 0; i < RECRAWL_WARNINGS.length; i++) {\n    var warning = RECRAWL_WARNINGS[i];\n    if (warning.root === root) {\n      return warning;\n    }\n  }\n};\nRecrawlWarning.isRecrawlWarningDupe = function (warningMessage) {\n  if (typeof warningMessage !== 'string') {\n    return false;\n  }\n  var match = warningMessage.match(REG);\n  if (!match) {\n    return false;\n  }\n  var count = Number(match[1]);\n  var root = match[2];\n  var warning = RecrawlWarning.findByRoot(root);\n  if (warning) {\n    // only keep the highest count, assume count to either stay the same or\n    // increase.\n    if (warning.count >= count) {\n      return true;\n    } else {\n      // update the existing warning to the latest (highest) count\n      warning.count = count;\n      return false;\n    }\n  } else {\n    RECRAWL_WARNINGS.push(new RecrawlWarning(root, count));\n    return false;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}