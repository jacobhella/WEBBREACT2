{"ast":null,"code":"/**\n * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n */\n\n'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar _chalk;\nfunction _load_chalk() {\n  return _chalk = _interopRequireDefault(require('chalk'));\n}\nvar _ansiEscapes;\nfunction _load_ansiEscapes() {\n  return _ansiEscapes = _interopRequireDefault(require('ansi-escapes'));\n}\nvar _Prompt;\nfunction _load_Prompt() {\n  return _Prompt = _interopRequireDefault(require('./lib/Prompt'));\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar usage = function usage(entity) {\n  return \"\\n\".concat((_chalk || _load_chalk()).default.bold('Pattern Mode Usage'), \"\\n\") + \" \".concat((_chalk || _load_chalk()).default.dim(\"\\u203A Press\"), \" Esc \").concat((_chalk || _load_chalk()).default.dim('to exit pattern mode.'), \"\\n\") + \" \".concat((_chalk || _load_chalk()).default.dim(\"\\u203A Press\"), \" Enter \") + \"\".concat((_chalk || _load_chalk()).default.dim(\"to filter by a \".concat(entity, \" regex pattern.\")), \"\\n\") + \"\\n\";\n};\nvar usageRows = usage('').split('\\n').length;\nvar PatternPrompt = /*#__PURE__*/function () {\n  function PatternPrompt(pipe, prompt) {\n    _classCallCheck(this, PatternPrompt);\n    this._pipe = pipe;\n    this._prompt = prompt;\n    this._currentUsageRows = usageRows;\n  }\n  _createClass(PatternPrompt, [{\n    key: \"run\",\n    value: function run(onSuccess, onCancel, options) {\n      this._pipe.write((_ansiEscapes || _load_ansiEscapes()).default.cursorHide);\n      this._pipe.write((_ansiEscapes || _load_ansiEscapes()).default.clearScreen);\n      if (options && options.header) {\n        this._pipe.write(options.header + '\\n');\n        this._currentUsageRows = usageRows + options.header.split('\\n').length;\n      } else {\n        this._currentUsageRows = usageRows;\n      }\n      this._pipe.write(usage(this._entityName));\n      this._pipe.write((_ansiEscapes || _load_ansiEscapes()).default.cursorShow);\n      this._prompt.enter(this._onChange.bind(this), onSuccess, onCancel);\n    }\n  }, {\n    key: \"_onChange\",\n    value: function _onChange(pattern, options) {\n      this._pipe.write((_ansiEscapes || _load_ansiEscapes()).default.eraseLine);\n      this._pipe.write((_ansiEscapes || _load_ansiEscapes()).default.cursorLeft);\n    }\n  }]);\n  return PatternPrompt;\n}();\nexports.default = PatternPrompt;","map":null,"metadata":{},"sourceType":"script"}