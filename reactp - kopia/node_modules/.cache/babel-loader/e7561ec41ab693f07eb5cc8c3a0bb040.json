{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar _path;\nfunction _load_path() {\n  return _path = _interopRequireDefault(require('path'));\n}\nvar _micromatch;\nfunction _load_micromatch() {\n  return _micromatch = _interopRequireDefault(require('micromatch'));\n}\nvar _constants;\nfunction _load_constants() {\n  return _constants = _interopRequireDefault(require('./constants'));\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar HasteFS = /*#__PURE__*/function () {\n  function HasteFS(files) {\n    _classCallCheck(this, HasteFS);\n    this._files = files;\n  }\n  _createClass(HasteFS, [{\n    key: \"getModuleName\",\n    value: function getModuleName(file) {\n      return this._files[file] && this._files[file][(_constants || _load_constants()).default.ID] || null;\n    }\n  }, {\n    key: \"getDependencies\",\n    value: function getDependencies(file) {\n      return this._files[file] && this._files[file][(_constants || _load_constants()).default.DEPENDENCIES] || null;\n    }\n  }, {\n    key: \"getSha1\",\n    value: function getSha1(file) {\n      return this._files[file] && this._files[file][(_constants || _load_constants()).default.SHA1] || null;\n    }\n  }, {\n    key: \"exists\",\n    value: function exists(file) {\n      return !!this._files[file];\n    }\n  }, {\n    key: \"getAllFiles\",\n    value: function getAllFiles() {\n      return Object.keys(this._files);\n    }\n  }, {\n    key: \"matchFiles\",\n    value: function matchFiles(pattern) {\n      if (!(pattern instanceof RegExp)) {\n        pattern = new RegExp(pattern);\n      }\n      var files = [];\n      for (var file in this._files) {\n        if (pattern.test(file)) {\n          files.push(file);\n        }\n      }\n      return files;\n    }\n  }, {\n    key: \"matchFilesWithGlob\",\n    value: function matchFilesWithGlob(globs, root) {\n      var files = new Set();\n      for (var file in this._files) {\n        var filePath = root ? (_path || _load_path()).default.relative(root, file) : file;\n        if ((0, (_micromatch || _load_micromatch()).default)([filePath], globs).length) {\n          files.add(file);\n        }\n      }\n      return files;\n    }\n  }]);\n  return HasteFS;\n}();\nexports.default = HasteFS;\n/**\n * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n */","map":null,"metadata":{},"sourceType":"script"}