{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar _chalk;\nfunction _load_chalk() {\n  return _chalk = _interopRequireDefault(require('chalk'));\n}\nvar _jestWatcher;\nfunction _load_jestWatcher() {\n  return _jestWatcher = require('jest-watcher');\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n */\n\nexports.default = function (pipe) {\n  var stdin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : process.stdin;\n  return new Promise(function (resolve, reject) {\n    if (typeof stdin.setRawMode === 'function') {\n      var messages = [(_chalk || _load_chalk()).default.red('There are deprecation warnings.\\n'), (_chalk || _load_chalk()).default.dim(\" \\u203A Press \") + 'Enter' + (_chalk || _load_chalk()).default.dim(' to continue.'), (_chalk || _load_chalk()).default.dim(\" \\u203A Press \") + 'Esc' + (_chalk || _load_chalk()).default.dim(' to exit.')];\n      pipe.write(messages.join('\\n'));\n\n      // $FlowFixMe\n      stdin.setRawMode(true);\n      stdin.resume();\n      stdin.setEncoding('utf8');\n      stdin.on('data', function (key) {\n        if (key === (_jestWatcher || _load_jestWatcher()).KEYS.ENTER) {\n          resolve();\n        } else if ([(_jestWatcher || _load_jestWatcher()).KEYS.ESCAPE, (_jestWatcher || _load_jestWatcher()).KEYS.CONTROL_C, (_jestWatcher || _load_jestWatcher()).KEYS.CONTROL_D].indexOf(key) !== -1) {\n          reject();\n        }\n      });\n    } else {\n      resolve();\n    }\n  });\n};","map":null,"metadata":{},"sourceType":"script"}