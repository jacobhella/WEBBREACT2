{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getModuleName;\n{\n  var originalGetModuleName = getModuleName;\n  exports.default = getModuleName = function getModuleName(rootOpts, pluginOpts) {\n    var _pluginOpts$moduleId, _pluginOpts$moduleIds, _pluginOpts$getModule, _pluginOpts$moduleRoo;\n    return originalGetModuleName(rootOpts, {\n      moduleId: (_pluginOpts$moduleId = pluginOpts.moduleId) != null ? _pluginOpts$moduleId : rootOpts.moduleId,\n      moduleIds: (_pluginOpts$moduleIds = pluginOpts.moduleIds) != null ? _pluginOpts$moduleIds : rootOpts.moduleIds,\n      getModuleId: (_pluginOpts$getModule = pluginOpts.getModuleId) != null ? _pluginOpts$getModule : rootOpts.getModuleId,\n      moduleRoot: (_pluginOpts$moduleRoo = pluginOpts.moduleRoot) != null ? _pluginOpts$moduleRoo : rootOpts.moduleRoot\n    });\n  };\n}\nfunction getModuleName(rootOpts, pluginOpts) {\n  var filename = rootOpts.filename,\n    _rootOpts$filenameRel = rootOpts.filenameRelative,\n    filenameRelative = _rootOpts$filenameRel === void 0 ? filename : _rootOpts$filenameRel,\n    _rootOpts$sourceRoot = rootOpts.sourceRoot,\n    sourceRoot = _rootOpts$sourceRoot === void 0 ? pluginOpts.moduleRoot : _rootOpts$sourceRoot;\n  var moduleId = pluginOpts.moduleId,\n    _pluginOpts$moduleIds2 = pluginOpts.moduleIds,\n    moduleIds = _pluginOpts$moduleIds2 === void 0 ? !!moduleId : _pluginOpts$moduleIds2,\n    getModuleId = pluginOpts.getModuleId,\n    _pluginOpts$moduleRoo2 = pluginOpts.moduleRoot,\n    moduleRoot = _pluginOpts$moduleRoo2 === void 0 ? sourceRoot : _pluginOpts$moduleRoo2;\n  if (!moduleIds) return null;\n  if (moduleId != null && !getModuleId) {\n    return moduleId;\n  }\n  var moduleName = moduleRoot != null ? moduleRoot + \"/\" : \"\";\n  if (filenameRelative) {\n    var sourceRootReplacer = sourceRoot != null ? new RegExp(\"^\" + sourceRoot + \"/?\") : \"\";\n    moduleName += filenameRelative.replace(sourceRootReplacer, \"\").replace(/\\.(\\w*?)$/, \"\");\n  }\n  moduleName = moduleName.replace(/\\\\/g, \"/\");\n  if (getModuleId) {\n    return getModuleId(moduleName) || moduleName;\n  } else {\n    return moduleName;\n  }\n}","map":null,"metadata":{},"sourceType":"script"}