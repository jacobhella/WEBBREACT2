{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar _path;\nfunction _load_path() {\n  return _path = _interopRequireDefault(require('path'));\n}\nvar _fs;\nfunction _load_fs() {\n  return _fs = _interopRequireDefault(require('fs'));\n}\nvar _jsonlint;\nfunction _load_jsonlint() {\n  return _jsonlint = _interopRequireDefault(require('./vendor/jsonlint'));\n}\nvar _constants;\nfunction _load_constants() {\n  return _constants = require('./constants');\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n// Read the configuration and set its `rootDir`\n// 1. If it's a `package.json` file, we look into its \"jest\" property\n// 2. For any other file, we just require it.\nexports.default = function (configPath) {\n  var isJSON = configPath.endsWith('.json');\n  var configObject;\n  try {\n    // $FlowFixMe dynamic require\n    configObject = require(configPath);\n  } catch (error) {\n    if (isJSON) {\n      throw new Error(\"Jest: Failed to parse config file \".concat(configPath, \"\\n\") + \"  \".concat((_jsonlint || _load_jsonlint()).default.errors((_fs || _load_fs()).default.readFileSync(configPath, 'utf8'))));\n    } else {\n      throw error;\n    }\n  }\n  if (configPath.endsWith((_constants || _load_constants()).PACKAGE_JSON)) {\n    // Event if there's no \"jest\" property in package.json we will still use\n    // an empty object.\n    configObject = configObject.jest || {};\n  }\n  if (configObject.rootDir) {\n    // We don't touch it if it has an absolute path specified\n    if (!(_path || _load_path()).default.isAbsolute(configObject.rootDir)) {\n      // otherwise, we'll resolve it relative to the file's __dirname\n      configObject.rootDir = (_path || _load_path()).default.resolve((_path || _load_path()).default.dirname(configPath), configObject.rootDir);\n    }\n  } else {\n    // If rootDir is not there, we'll set it to this file's __dirname\n    configObject.rootDir = (_path || _load_path()).default.dirname(configPath);\n  }\n  return configObject;\n};\n/**\n * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n */","map":null,"metadata":{},"sourceType":"script"}