{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = JsApiReporter;\n/**\n * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n// This file is a heavily modified fork of Jasmine. Original license:\n/*\nCopyright (c) 2008-2016 Pivotal Labs\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* eslint-disable sort-keys */\n\nvar noopTimer = {\n  start: function start() {},\n  elapsed: function elapsed() {\n    return 0;\n  }\n};\nfunction JsApiReporter(options) {\n  var timer = options.timer || noopTimer;\n  var status = 'loaded';\n  this.started = false;\n  this.finished = false;\n  this.runDetails = {};\n  this.jasmineStarted = function () {\n    this.started = true;\n    status = 'started';\n    timer.start();\n  };\n  var executionTime;\n  function validateAfterAllExceptions(_ref) {\n    var failedExpectations = _ref.failedExpectations;\n    if (failedExpectations && failedExpectations.length > 0) {\n      throw failedExpectations[0];\n    }\n  }\n  this.jasmineDone = function (runDetails) {\n    validateAfterAllExceptions(runDetails);\n    this.finished = true;\n    this.runDetails = runDetails;\n    executionTime = timer.elapsed();\n    status = 'done';\n  };\n  this.status = function () {\n    return status;\n  };\n  var suites = [];\n  var suites_hash = {};\n  this.suiteStarted = function (result) {\n    suites_hash[result.id] = result;\n  };\n  this.suiteDone = function (result) {\n    storeSuite(result);\n  };\n  this.suiteResults = function (index, length) {\n    return suites.slice(index, index + length);\n  };\n  function storeSuite(result) {\n    suites.push(result);\n    suites_hash[result.id] = result;\n  }\n  this.suites = function () {\n    return suites_hash;\n  };\n  var specs = [];\n  this.specDone = function (result) {\n    specs.push(result);\n  };\n  this.specResults = function (index, length) {\n    return specs.slice(index, index + length);\n  };\n  this.specs = function () {\n    return specs;\n  };\n  this.executionTime = function () {\n    return executionTime;\n  };\n}","map":null,"metadata":{},"sourceType":"script"}