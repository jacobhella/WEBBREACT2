{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/toConsumableArray\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nvar _marked = /*#__PURE__*/_regeneratorRuntime().mark(buildPresetChain),\n  _marked2 = /*#__PURE__*/_regeneratorRuntime().mark(buildRootChain),\n  _marked3 = /*#__PURE__*/_regeneratorRuntime().mark(loadFileChain),\n  _marked4 = /*#__PURE__*/_regeneratorRuntime().mark(mergeExtendsChain);\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildPresetChain = buildPresetChain;\nexports.buildPresetChainWalker = void 0;\nexports.buildRootChain = buildRootChain;\nfunction _path() {\n  var data = require(\"path\");\n  _path = function _path() {\n    return data;\n  };\n  return data;\n}\nfunction _debug() {\n  var data = require(\"debug\");\n  _debug = function _debug() {\n    return data;\n  };\n  return data;\n}\nvar _options = require(\"./validation/options\");\nvar _patternToRegex = require(\"./pattern-to-regex\");\nvar _printer = require(\"./printer\");\nvar _rewriteStackTrace = require(\"../errors/rewrite-stack-trace\");\nvar _configError = require(\"../errors/config-error\");\nvar _files = require(\"./files\");\nvar _caching = require(\"./caching\");\nvar _configDescriptors = require(\"./config-descriptors\");\nvar debug = _debug()(\"babel:config:config-chain\");\nfunction buildPresetChain(arg, context) {\n  var chain;\n  return _regeneratorRuntime().wrap(function buildPresetChain$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        return _context.delegateYield(buildPresetChainWalker(arg, context), \"t0\", 1);\n      case 1:\n        chain = _context.t0;\n        if (chain) {\n          _context.next = 4;\n          break;\n        }\n        return _context.abrupt(\"return\", null);\n      case 4:\n        return _context.abrupt(\"return\", {\n          plugins: dedupDescriptors(chain.plugins),\n          presets: dedupDescriptors(chain.presets),\n          options: chain.options.map(function (o) {\n            return normalizeOptions(o);\n          }),\n          files: new Set()\n        });\n      case 5:\n      case \"end\":\n        return _context.stop();\n    }\n  }, _marked);\n}\nvar buildPresetChainWalker = makeChainWalker({\n  root: function root(preset) {\n    return loadPresetDescriptors(preset);\n  },\n  env: function env(preset, envName) {\n    return loadPresetEnvDescriptors(preset)(envName);\n  },\n  overrides: function overrides(preset, index) {\n    return loadPresetOverridesDescriptors(preset)(index);\n  },\n  overridesEnv: function overridesEnv(preset, index, envName) {\n    return loadPresetOverridesEnvDescriptors(preset)(index)(envName);\n  },\n  createLogger: function createLogger() {\n    return function () {};\n  }\n});\nexports.buildPresetChainWalker = buildPresetChainWalker;\nvar loadPresetDescriptors = (0, _caching.makeWeakCacheSync)(function (preset) {\n  return buildRootDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors);\n});\nvar loadPresetEnvDescriptors = (0, _caching.makeWeakCacheSync)(function (preset) {\n  return (0, _caching.makeStrongCacheSync)(function (envName) {\n    return buildEnvDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors, envName);\n  });\n});\nvar loadPresetOverridesDescriptors = (0, _caching.makeWeakCacheSync)(function (preset) {\n  return (0, _caching.makeStrongCacheSync)(function (index) {\n    return buildOverrideDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors, index);\n  });\n});\nvar loadPresetOverridesEnvDescriptors = (0, _caching.makeWeakCacheSync)(function (preset) {\n  return (0, _caching.makeStrongCacheSync)(function (index) {\n    return (0, _caching.makeStrongCacheSync)(function (envName) {\n      return buildOverrideEnvDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors, index, envName);\n    });\n  });\n});\nfunction buildRootChain(opts, context) {\n  var configReport, babelRcReport, programmaticLogger, programmaticChain, programmaticReport, configFile, babelrc, babelrcRoots, babelrcRootsDirectory, configFileChain, configFileLogger, validatedFile, result, ignoreFile, babelrcFile, isIgnored, fileChain, pkgData, _yield, _validatedFile, babelrcLogger, _result, chain;\n  return _regeneratorRuntime().wrap(function buildRootChain$(_context2) {\n    while (1) switch (_context2.prev = _context2.next) {\n      case 0:\n        programmaticLogger = new _printer.ConfigPrinter();\n        return _context2.delegateYield(loadProgrammaticChain({\n          options: opts,\n          dirname: context.cwd\n        }, context, undefined, programmaticLogger), \"t0\", 2);\n      case 2:\n        programmaticChain = _context2.t0;\n        if (programmaticChain) {\n          _context2.next = 5;\n          break;\n        }\n        return _context2.abrupt(\"return\", null);\n      case 5:\n        return _context2.delegateYield(programmaticLogger.output(), \"t1\", 6);\n      case 6:\n        programmaticReport = _context2.t1;\n        if (!(typeof opts.configFile === \"string\")) {\n          _context2.next = 12;\n          break;\n        }\n        return _context2.delegateYield((0, _files.loadConfig)(opts.configFile, context.cwd, context.envName, context.caller), \"t2\", 9);\n      case 9:\n        configFile = _context2.t2;\n        _context2.next = 15;\n        break;\n      case 12:\n        if (!(opts.configFile !== false)) {\n          _context2.next = 15;\n          break;\n        }\n        return _context2.delegateYield((0, _files.findRootConfig)(context.root, context.envName, context.caller), \"t3\", 14);\n      case 14:\n        configFile = _context2.t3;\n      case 15:\n        babelrc = opts.babelrc, babelrcRoots = opts.babelrcRoots;\n        babelrcRootsDirectory = context.cwd;\n        configFileChain = emptyChain();\n        configFileLogger = new _printer.ConfigPrinter();\n        if (!configFile) {\n          _context2.next = 30;\n          break;\n        }\n        validatedFile = validateConfigFile(configFile);\n        return _context2.delegateYield(loadFileChain(validatedFile, context, undefined, configFileLogger), \"t4\", 22);\n      case 22:\n        result = _context2.t4;\n        if (result) {\n          _context2.next = 25;\n          break;\n        }\n        return _context2.abrupt(\"return\", null);\n      case 25:\n        return _context2.delegateYield(configFileLogger.output(), \"t5\", 26);\n      case 26:\n        configReport = _context2.t5;\n        if (babelrc === undefined) {\n          babelrc = validatedFile.options.babelrc;\n        }\n        if (babelrcRoots === undefined) {\n          babelrcRootsDirectory = validatedFile.dirname;\n          babelrcRoots = validatedFile.options.babelrcRoots;\n        }\n        mergeChain(configFileChain, result);\n      case 30:\n        isIgnored = false;\n        fileChain = emptyChain();\n        if (!((babelrc === true || babelrc === undefined) && typeof context.filename === \"string\")) {\n          _context2.next = 55;\n          break;\n        }\n        return _context2.delegateYield((0, _files.findPackageData)(context.filename), \"t6\", 34);\n      case 34:\n        pkgData = _context2.t6;\n        if (!(pkgData && babelrcLoadEnabled(context, pkgData, babelrcRoots, babelrcRootsDirectory))) {\n          _context2.next = 55;\n          break;\n        }\n        return _context2.delegateYield((0, _files.findRelativeConfig)(pkgData, context.envName, context.caller), \"t7\", 37);\n      case 37:\n        _yield = _context2.t7;\n        ignoreFile = _yield.ignore;\n        babelrcFile = _yield.config;\n        if (ignoreFile) {\n          fileChain.files.add(ignoreFile.filepath);\n        }\n        if (ignoreFile && shouldIgnore(context, ignoreFile.ignore, null, ignoreFile.dirname)) {\n          isIgnored = true;\n        }\n        if (!(babelrcFile && !isIgnored)) {\n          _context2.next = 54;\n          break;\n        }\n        _validatedFile = validateBabelrcFile(babelrcFile);\n        babelrcLogger = new _printer.ConfigPrinter();\n        return _context2.delegateYield(loadFileChain(_validatedFile, context, undefined, babelrcLogger), \"t8\", 46);\n      case 46:\n        _result = _context2.t8;\n        if (_result) {\n          _context2.next = 51;\n          break;\n        }\n        isIgnored = true;\n        _context2.next = 54;\n        break;\n      case 51:\n        return _context2.delegateYield(babelrcLogger.output(), \"t9\", 52);\n      case 52:\n        babelRcReport = _context2.t9;\n        mergeChain(fileChain, _result);\n      case 54:\n        if (babelrcFile && isIgnored) {\n          fileChain.files.add(babelrcFile.filepath);\n        }\n      case 55:\n        if (context.showConfig) {\n          console.log(\"Babel configs on \\\"\".concat(context.filename, \"\\\" (ascending priority):\\n\") + [configReport, babelRcReport, programmaticReport].filter(function (x) {\n            return !!x;\n          }).join(\"\\n\\n\") + \"\\n-----End Babel configs-----\");\n        }\n        chain = mergeChain(mergeChain(mergeChain(emptyChain(), configFileChain), fileChain), programmaticChain);\n        return _context2.abrupt(\"return\", {\n          plugins: isIgnored ? [] : dedupDescriptors(chain.plugins),\n          presets: isIgnored ? [] : dedupDescriptors(chain.presets),\n          options: isIgnored ? [] : chain.options.map(function (o) {\n            return normalizeOptions(o);\n          }),\n          fileHandling: isIgnored ? \"ignored\" : \"transpile\",\n          ignore: ignoreFile || undefined,\n          babelrc: babelrcFile || undefined,\n          config: configFile || undefined,\n          files: chain.files\n        });\n      case 58:\n      case \"end\":\n        return _context2.stop();\n    }\n  }, _marked2);\n}\nfunction babelrcLoadEnabled(context, pkgData, babelrcRoots, babelrcRootsDirectory) {\n  if (typeof babelrcRoots === \"boolean\") return babelrcRoots;\n  var absoluteRoot = context.root;\n  if (babelrcRoots === undefined) {\n    return pkgData.directories.indexOf(absoluteRoot) !== -1;\n  }\n  var babelrcPatterns = babelrcRoots;\n  if (!Array.isArray(babelrcPatterns)) {\n    babelrcPatterns = [babelrcPatterns];\n  }\n  babelrcPatterns = babelrcPatterns.map(function (pat) {\n    return typeof pat === \"string\" ? _path().resolve(babelrcRootsDirectory, pat) : pat;\n  });\n  if (babelrcPatterns.length === 1 && babelrcPatterns[0] === absoluteRoot) {\n    return pkgData.directories.indexOf(absoluteRoot) !== -1;\n  }\n  return babelrcPatterns.some(function (pat) {\n    if (typeof pat === \"string\") {\n      pat = (0, _patternToRegex.default)(pat, babelrcRootsDirectory);\n    }\n    return pkgData.directories.some(function (directory) {\n      return matchPattern(pat, babelrcRootsDirectory, directory, context);\n    });\n  });\n}\nvar validateConfigFile = (0, _caching.makeWeakCacheSync)(function (file) {\n  return {\n    filepath: file.filepath,\n    dirname: file.dirname,\n    options: (0, _options.validate)(\"configfile\", file.options, file.filepath)\n  };\n});\nvar validateBabelrcFile = (0, _caching.makeWeakCacheSync)(function (file) {\n  return {\n    filepath: file.filepath,\n    dirname: file.dirname,\n    options: (0, _options.validate)(\"babelrcfile\", file.options, file.filepath)\n  };\n});\nvar validateExtendFile = (0, _caching.makeWeakCacheSync)(function (file) {\n  return {\n    filepath: file.filepath,\n    dirname: file.dirname,\n    options: (0, _options.validate)(\"extendsfile\", file.options, file.filepath)\n  };\n});\nvar loadProgrammaticChain = makeChainWalker({\n  root: function root(input) {\n    return buildRootDescriptors(input, \"base\", _configDescriptors.createCachedDescriptors);\n  },\n  env: function env(input, envName) {\n    return buildEnvDescriptors(input, \"base\", _configDescriptors.createCachedDescriptors, envName);\n  },\n  overrides: function overrides(input, index) {\n    return buildOverrideDescriptors(input, \"base\", _configDescriptors.createCachedDescriptors, index);\n  },\n  overridesEnv: function overridesEnv(input, index, envName) {\n    return buildOverrideEnvDescriptors(input, \"base\", _configDescriptors.createCachedDescriptors, index, envName);\n  },\n  createLogger: function createLogger(input, context, baseLogger) {\n    return buildProgrammaticLogger(input, context, baseLogger);\n  }\n});\nvar loadFileChainWalker = makeChainWalker({\n  root: function root(file) {\n    return loadFileDescriptors(file);\n  },\n  env: function env(file, envName) {\n    return loadFileEnvDescriptors(file)(envName);\n  },\n  overrides: function overrides(file, index) {\n    return loadFileOverridesDescriptors(file)(index);\n  },\n  overridesEnv: function overridesEnv(file, index, envName) {\n    return loadFileOverridesEnvDescriptors(file)(index)(envName);\n  },\n  createLogger: function createLogger(file, context, baseLogger) {\n    return buildFileLogger(file.filepath, context, baseLogger);\n  }\n});\nfunction loadFileChain(input, context, files, baseLogger) {\n  var chain;\n  return _regeneratorRuntime().wrap(function loadFileChain$(_context3) {\n    while (1) switch (_context3.prev = _context3.next) {\n      case 0:\n        return _context3.delegateYield(loadFileChainWalker(input, context, files, baseLogger), \"t0\", 1);\n      case 1:\n        chain = _context3.t0;\n        if (chain) {\n          chain.files.add(input.filepath);\n        }\n        return _context3.abrupt(\"return\", chain);\n      case 4:\n      case \"end\":\n        return _context3.stop();\n    }\n  }, _marked3);\n}\nvar loadFileDescriptors = (0, _caching.makeWeakCacheSync)(function (file) {\n  return buildRootDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors);\n});\nvar loadFileEnvDescriptors = (0, _caching.makeWeakCacheSync)(function (file) {\n  return (0, _caching.makeStrongCacheSync)(function (envName) {\n    return buildEnvDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors, envName);\n  });\n});\nvar loadFileOverridesDescriptors = (0, _caching.makeWeakCacheSync)(function (file) {\n  return (0, _caching.makeStrongCacheSync)(function (index) {\n    return buildOverrideDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors, index);\n  });\n});\nvar loadFileOverridesEnvDescriptors = (0, _caching.makeWeakCacheSync)(function (file) {\n  return (0, _caching.makeStrongCacheSync)(function (index) {\n    return (0, _caching.makeStrongCacheSync)(function (envName) {\n      return buildOverrideEnvDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors, index, envName);\n    });\n  });\n});\nfunction buildFileLogger(filepath, context, baseLogger) {\n  if (!baseLogger) {\n    return function () {};\n  }\n  return baseLogger.configure(context.showConfig, _printer.ChainFormatter.Config, {\n    filepath: filepath\n  });\n}\nfunction buildRootDescriptors(_ref, alias, descriptors) {\n  var dirname = _ref.dirname,\n    options = _ref.options;\n  return descriptors(dirname, options, alias);\n}\nfunction buildProgrammaticLogger(_, context, baseLogger) {\n  var _context$caller;\n  if (!baseLogger) {\n    return function () {};\n  }\n  return baseLogger.configure(context.showConfig, _printer.ChainFormatter.Programmatic, {\n    callerName: (_context$caller = context.caller) == null ? void 0 : _context$caller.name\n  });\n}\nfunction buildEnvDescriptors(_ref2, alias, descriptors, envName) {\n  var dirname = _ref2.dirname,\n    options = _ref2.options;\n  var opts = options.env && options.env[envName];\n  return opts ? descriptors(dirname, opts, \"\".concat(alias, \".env[\\\"\").concat(envName, \"\\\"]\")) : null;\n}\nfunction buildOverrideDescriptors(_ref3, alias, descriptors, index) {\n  var dirname = _ref3.dirname,\n    options = _ref3.options;\n  var opts = options.overrides && options.overrides[index];\n  if (!opts) throw new Error(\"Assertion failure - missing override\");\n  return descriptors(dirname, opts, \"\".concat(alias, \".overrides[\").concat(index, \"]\"));\n}\nfunction buildOverrideEnvDescriptors(_ref4, alias, descriptors, index, envName) {\n  var dirname = _ref4.dirname,\n    options = _ref4.options;\n  var override = options.overrides && options.overrides[index];\n  if (!override) throw new Error(\"Assertion failure - missing override\");\n  var opts = override.env && override.env[envName];\n  return opts ? descriptors(dirname, opts, \"\".concat(alias, \".overrides[\").concat(index, \"].env[\\\"\").concat(envName, \"\\\"]\")) : null;\n}\nfunction makeChainWalker(_ref5) {\n  var root = _ref5.root,\n    env = _ref5.env,\n    overrides = _ref5.overrides,\n    overridesEnv = _ref5.overridesEnv,\n    createLogger = _ref5.createLogger;\n  return function chainWalker(input, context) {\n    var files = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Set();\n    var baseLogger = arguments.length > 3 ? arguments[3] : undefined;\n    return /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var dirname, flattenedConfigs, rootOpts, envOpts, chain, logger, _i, _flattenedConfigs, _flattenedConfigs$_i, config, index, envName;\n      return _regeneratorRuntime().wrap(function _callee$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            dirname = input.dirname;\n            flattenedConfigs = [];\n            rootOpts = root(input);\n            if (configIsApplicable(rootOpts, dirname, context, input.filepath)) {\n              flattenedConfigs.push({\n                config: rootOpts,\n                envName: undefined,\n                index: undefined\n              });\n              envOpts = env(input, context.envName);\n              if (envOpts && configIsApplicable(envOpts, dirname, context, input.filepath)) {\n                flattenedConfigs.push({\n                  config: envOpts,\n                  envName: context.envName,\n                  index: undefined\n                });\n              }\n              (rootOpts.options.overrides || []).forEach(function (_, index) {\n                var overrideOps = overrides(input, index);\n                if (configIsApplicable(overrideOps, dirname, context, input.filepath)) {\n                  flattenedConfigs.push({\n                    config: overrideOps,\n                    index: index,\n                    envName: undefined\n                  });\n                  var overrideEnvOpts = overridesEnv(input, index, context.envName);\n                  if (overrideEnvOpts && configIsApplicable(overrideEnvOpts, dirname, context, input.filepath)) {\n                    flattenedConfigs.push({\n                      config: overrideEnvOpts,\n                      index: index,\n                      envName: context.envName\n                    });\n                  }\n                }\n              });\n            }\n            if (!flattenedConfigs.some(function (_ref6) {\n              var _ref6$config$options = _ref6.config.options,\n                ignore = _ref6$config$options.ignore,\n                only = _ref6$config$options.only;\n              return shouldIgnore(context, ignore, only, dirname);\n            })) {\n              _context4.next = 6;\n              break;\n            }\n            return _context4.abrupt(\"return\", null);\n          case 6:\n            chain = emptyChain();\n            logger = createLogger(input, context, baseLogger);\n            _i = 0, _flattenedConfigs = flattenedConfigs;\n          case 9:\n            if (!(_i < _flattenedConfigs.length)) {\n              _context4.next = 19;\n              break;\n            }\n            _flattenedConfigs$_i = _flattenedConfigs[_i], config = _flattenedConfigs$_i.config, index = _flattenedConfigs$_i.index, envName = _flattenedConfigs$_i.envName;\n            return _context4.delegateYield(mergeExtendsChain(chain, config.options, dirname, context, files, baseLogger), \"t0\", 12);\n          case 12:\n            if (_context4.t0) {\n              _context4.next = 14;\n              break;\n            }\n            return _context4.abrupt(\"return\", null);\n          case 14:\n            logger(config, index, envName);\n            return _context4.delegateYield(mergeChainOpts(chain, config), \"t1\", 16);\n          case 16:\n            _i++;\n            _context4.next = 9;\n            break;\n          case 19:\n            return _context4.abrupt(\"return\", chain);\n          case 20:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee);\n    })();\n  };\n}\nfunction mergeExtendsChain(chain, opts, dirname, context, files, baseLogger) {\n  var file, fileChain;\n  return _regeneratorRuntime().wrap(function mergeExtendsChain$(_context5) {\n    while (1) switch (_context5.prev = _context5.next) {\n      case 0:\n        if (!(opts.extends === undefined)) {\n          _context5.next = 2;\n          break;\n        }\n        return _context5.abrupt(\"return\", true);\n      case 2:\n        return _context5.delegateYield((0, _files.loadConfig)(opts.extends, dirname, context.envName, context.caller), \"t0\", 3);\n      case 3:\n        file = _context5.t0;\n        if (!files.has(file)) {\n          _context5.next = 6;\n          break;\n        }\n        throw new Error(\"Configuration cycle detected loading \".concat(file.filepath, \".\\n\") + \"File already loaded following the config chain:\\n\" + Array.from(files, function (file) {\n          return \" - \".concat(file.filepath);\n        }).join(\"\\n\"));\n      case 6:\n        files.add(file);\n        return _context5.delegateYield(loadFileChain(validateExtendFile(file), context, files, baseLogger), \"t1\", 8);\n      case 8:\n        fileChain = _context5.t1;\n        files.delete(file);\n        if (fileChain) {\n          _context5.next = 12;\n          break;\n        }\n        return _context5.abrupt(\"return\", false);\n      case 12:\n        mergeChain(chain, fileChain);\n        return _context5.abrupt(\"return\", true);\n      case 14:\n      case \"end\":\n        return _context5.stop();\n    }\n  }, _marked4);\n}\nfunction mergeChain(target, source) {\n  var _target$options, _target$plugins, _target$presets;\n  (_target$options = target.options).push.apply(_target$options, _toConsumableArray(source.options));\n  (_target$plugins = target.plugins).push.apply(_target$plugins, _toConsumableArray(source.plugins));\n  (_target$presets = target.presets).push.apply(_target$presets, _toConsumableArray(source.presets));\n  var _iterator = _createForOfIteratorHelper(source.files),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var file = _step.value;\n      target.files.add(file);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return target;\n}\nfunction mergeChainOpts(target, _ref7) {\n  var options = _ref7.options,\n    plugins = _ref7.plugins,\n    presets = _ref7.presets;\n  return /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n    var _target$plugins2, _target$presets2;\n    return _regeneratorRuntime().wrap(function _callee2$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          target.options.push(options);\n          _context6.t0 = (_target$plugins2 = target.plugins).push;\n          _context6.t1 = _target$plugins2;\n          _context6.t2 = _toConsumableArray;\n          return _context6.delegateYield(plugins(), \"t3\", 5);\n        case 5:\n          _context6.t4 = _context6.t3;\n          _context6.t5 = (0, _context6.t2)(_context6.t4);\n          _context6.t0.apply.call(_context6.t0, _context6.t1, _context6.t5);\n          _context6.t6 = (_target$presets2 = target.presets).push;\n          _context6.t7 = _target$presets2;\n          _context6.t8 = _toConsumableArray;\n          return _context6.delegateYield(presets(), \"t9\", 12);\n        case 12:\n          _context6.t10 = _context6.t9;\n          _context6.t11 = (0, _context6.t8)(_context6.t10);\n          _context6.t6.apply.call(_context6.t6, _context6.t7, _context6.t11);\n          return _context6.abrupt(\"return\", target);\n        case 16:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee2);\n  })();\n}\nfunction emptyChain() {\n  return {\n    options: [],\n    presets: [],\n    plugins: [],\n    files: new Set()\n  };\n}\nfunction normalizeOptions(opts) {\n  var options = Object.assign({}, opts);\n  delete options.extends;\n  delete options.env;\n  delete options.overrides;\n  delete options.plugins;\n  delete options.presets;\n  delete options.passPerPreset;\n  delete options.ignore;\n  delete options.only;\n  delete options.test;\n  delete options.include;\n  delete options.exclude;\n  if (Object.prototype.hasOwnProperty.call(options, \"sourceMap\")) {\n    options.sourceMaps = options.sourceMap;\n    delete options.sourceMap;\n  }\n  return options;\n}\nfunction dedupDescriptors(items) {\n  var map = new Map();\n  var descriptors = [];\n  var _iterator2 = _createForOfIteratorHelper(items),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var item = _step2.value;\n      if (typeof item.value === \"function\") {\n        var fnKey = item.value;\n        var nameMap = map.get(fnKey);\n        if (!nameMap) {\n          nameMap = new Map();\n          map.set(fnKey, nameMap);\n        }\n        var desc = nameMap.get(item.name);\n        if (!desc) {\n          desc = {\n            value: item\n          };\n          descriptors.push(desc);\n          if (!item.ownPass) nameMap.set(item.name, desc);\n        } else {\n          desc.value = item;\n        }\n      } else {\n        descriptors.push({\n          value: item\n        });\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return descriptors.reduce(function (acc, desc) {\n    acc.push(desc.value);\n    return acc;\n  }, []);\n}\nfunction configIsApplicable(_ref8, dirname, context, configName) {\n  var options = _ref8.options;\n  return (options.test === undefined || configFieldIsApplicable(context, options.test, dirname, configName)) && (options.include === undefined || configFieldIsApplicable(context, options.include, dirname, configName)) && (options.exclude === undefined || !configFieldIsApplicable(context, options.exclude, dirname, configName));\n}\nfunction configFieldIsApplicable(context, test, dirname, configName) {\n  var patterns = Array.isArray(test) ? test : [test];\n  return matchesPatterns(context, patterns, dirname, configName);\n}\nfunction ignoreListReplacer(_key, value) {\n  if (value instanceof RegExp) {\n    return String(value);\n  }\n  return value;\n}\nfunction shouldIgnore(context, ignore, only, dirname) {\n  if (ignore && matchesPatterns(context, ignore, dirname)) {\n    var _context$filename;\n    var message = \"No config is applied to \\\"\".concat((_context$filename = context.filename) != null ? _context$filename : \"(unknown)\", \"\\\" because it matches one of `ignore: \").concat(JSON.stringify(ignore, ignoreListReplacer), \"` from \\\"\").concat(dirname, \"\\\"\");\n    debug(message);\n    if (context.showConfig) {\n      console.log(message);\n    }\n    return true;\n  }\n  if (only && !matchesPatterns(context, only, dirname)) {\n    var _context$filename2;\n    var _message = \"No config is applied to \\\"\".concat((_context$filename2 = context.filename) != null ? _context$filename2 : \"(unknown)\", \"\\\" because it fails to match one of `only: \").concat(JSON.stringify(only, ignoreListReplacer), \"` from \\\"\").concat(dirname, \"\\\"\");\n    debug(_message);\n    if (context.showConfig) {\n      console.log(_message);\n    }\n    return true;\n  }\n  return false;\n}\nfunction matchesPatterns(context, patterns, dirname, configName) {\n  return patterns.some(function (pattern) {\n    return matchPattern(pattern, dirname, context.filename, context, configName);\n  });\n}\nfunction matchPattern(pattern, dirname, pathToTest, context, configName) {\n  if (typeof pattern === \"function\") {\n    return !!(0, _rewriteStackTrace.endHiddenCallStack)(pattern)(pathToTest, {\n      dirname: dirname,\n      envName: context.envName,\n      caller: context.caller\n    });\n  }\n  if (typeof pathToTest !== \"string\") {\n    throw new _configError.default(\"Configuration contains string/RegExp pattern, but no filename was passed to Babel\", configName);\n  }\n  if (typeof pattern === \"string\") {\n    pattern = (0, _patternToRegex.default)(pattern, dirname);\n  }\n  return pattern.test(pathToTest);\n}\n0 && 0;","map":null,"metadata":{},"sourceType":"script"}