{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar serialize = exports.serialize = function (val, config, indentation, depth, refs, printer) {\n  // Serialize a non-default name, even if config.printFunctionName is false.\n  var name = val.getMockName();\n  var nameString = name === 'jest.fn()' ? '' : ' ' + name;\n  var callsString = '';\n  if (val.mock.calls.length !== 0) {\n    var indentationNext = indentation + config.indent;\n    callsString = ' {' + config.spacingOuter + indentationNext + '\"calls\": ' + printer(val.mock.calls, config, indentationNext, depth, refs) + (config.min ? ', ' : ',') + config.spacingOuter + indentationNext + '\"results\": ' + printer(val.mock.results, config, indentationNext, depth, refs) + (config.min ? '' : ',') + config.spacingOuter + indentation + '}';\n  }\n  return '[MockFunction' + nameString + ']' + callsString;\n};\n/**\n * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n */\n\nvar test = exports.test = function (val) {\n  return val && !!val._isMockFunction;\n};\nexports.default = {\n  serialize: serialize,\n  test: test\n};","map":null,"metadata":{},"sourceType":"script"}