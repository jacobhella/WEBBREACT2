{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.bind = undefined;\nvar _bind;\nfunction _load_bind() {\n  return _bind = _interopRequireDefault(require('./bind'));\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar install = function install(g) {\n  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n  var test = function test(title, _test, timeout) {\n    return (0, (_bind || _load_bind()).default)(g.test).apply(undefined, args)(title, _test, timeout);\n  };\n  test.skip = (0, (_bind || _load_bind()).default)(g.test.skip).apply(undefined, args);\n  test.only = (0, (_bind || _load_bind()).default)(g.test.only).apply(undefined, args);\n  var it = function it(title, test, timeout) {\n    return (0, (_bind || _load_bind()).default)(g.it).apply(undefined, args)(title, test, timeout);\n  };\n  it.skip = (0, (_bind || _load_bind()).default)(g.it.skip).apply(undefined, args);\n  it.only = (0, (_bind || _load_bind()).default)(g.it.only).apply(undefined, args);\n  var xit = (0, (_bind || _load_bind()).default)(g.xit).apply(undefined, args);\n  var fit = (0, (_bind || _load_bind()).default)(g.fit).apply(undefined, args);\n  var xtest = (0, (_bind || _load_bind()).default)(g.xtest).apply(undefined, args);\n  var describe = function describe(title, suite, timeout) {\n    return (0, (_bind || _load_bind()).default)(g.describe, false).apply(undefined, args)(title, suite, timeout);\n  };\n  describe.skip = (0, (_bind || _load_bind()).default)(g.describe.skip, false).apply(undefined, args);\n  describe.only = (0, (_bind || _load_bind()).default)(g.describe.only, false).apply(undefined, args);\n  var fdescribe = (0, (_bind || _load_bind()).default)(g.fdescribe, false).apply(undefined, args);\n  var xdescribe = (0, (_bind || _load_bind()).default)(g.xdescribe, false).apply(undefined, args);\n  return {\n    describe: describe,\n    fdescribe: fdescribe,\n    fit: fit,\n    it: it,\n    test: test,\n    xdescribe: xdescribe,\n    xit: xit,\n    xtest: xtest\n  };\n};\n/**\n * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n */\n\nvar each = function each() {\n  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n  return install.apply(undefined, [global].concat(args));\n};\neach.withGlobal = function (g) {\n  return function () {\n    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    return install.apply(undefined, [g].concat(args));\n  };\n};\nexports.bind = (_bind || _load_bind()).default;\nexports.default = each;","map":null,"metadata":{},"sourceType":"script"}