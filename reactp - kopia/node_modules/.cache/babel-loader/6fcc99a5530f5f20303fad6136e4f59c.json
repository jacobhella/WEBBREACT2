{"ast":null,"code":"/*\n Copyright 2015, Yahoo Inc.\n Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\n\"use strict\";\n\nvar FileCoverage = require('istanbul-lib-coverage').classes.FileCoverage,\n  util = require('util');\nfunction MappedCoverage(pathOrObj) {\n  FileCoverage.call(this, pathOrObj);\n  this.meta = {\n    last: {\n      s: 0,\n      f: 0,\n      b: 0\n    },\n    seen: {}\n  };\n}\nutil.inherits(MappedCoverage, FileCoverage);\nfunction locString(loc) {\n  return [loc.start.line, loc.start.column, loc.end.line, loc.end.column].join(':');\n}\nMappedCoverage.prototype.addStatement = function (loc, hits) {\n  var key = 's:' + locString(loc),\n    meta = this.meta,\n    index = meta.seen[key];\n  if (index === undefined) {\n    index = meta.last.s;\n    meta.last.s += 1;\n    meta.seen[key] = index;\n    this.statementMap[index] = this.cloneLocation(loc);\n  }\n  this.s[index] = this.s[index] || 0;\n  this.s[index] += hits;\n  return index;\n};\nMappedCoverage.prototype.addFunction = function (name, decl, loc, hits) {\n  var key = 'f:' + locString(decl),\n    meta = this.meta,\n    index = meta.seen[key];\n  if (index === undefined) {\n    index = meta.last.f;\n    meta.last.f += 1;\n    meta.seen[key] = index;\n    name = name || '(unknown_' + index + ')';\n    this.fnMap[index] = {\n      name: name,\n      decl: this.cloneLocation(decl),\n      loc: this.cloneLocation(loc)\n    };\n  }\n  this.f[index] = this.f[index] || 0;\n  this.f[index] += hits;\n  return index;\n};\nMappedCoverage.prototype.addBranch = function (type, loc, branchLocations, hits) {\n  var key = ['b'],\n    meta = this.meta,\n    that = this,\n    index,\n    i;\n  branchLocations.forEach(function (l) {\n    key.push(locString(l));\n  });\n  key = key.join(':');\n  index = meta.seen[key];\n  if (index === undefined) {\n    index = meta.last.b;\n    meta.last.b += 1;\n    meta.seen[key] = index;\n    this.branchMap[index] = {\n      loc: loc,\n      type: type,\n      locations: branchLocations.map(function (l) {\n        return that.cloneLocation(l);\n      })\n    };\n  }\n  if (!this.b[index]) {\n    this.b[index] = [];\n    branchLocations.forEach(function () {\n      that.b[index].push(0);\n    });\n  }\n  for (i = 0; i < hits.length; i += 1) {\n    that.b[index][i] += hits[i];\n  }\n  return index;\n};\n\n// returns a clone of the location object with only\n// the attributes of interest\nMappedCoverage.prototype.cloneLocation = function (loc) {\n  return {\n    start: {\n      line: loc.start.line,\n      column: loc.start.column\n    },\n    end: {\n      line: loc.end.line,\n      column: loc.end.column\n    }\n  };\n};\nmodule.exports = {\n  MappedCoverage: MappedCoverage\n};","map":null,"metadata":{},"sourceType":"script"}