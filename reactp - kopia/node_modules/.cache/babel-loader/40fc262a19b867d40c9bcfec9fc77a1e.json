{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = pTimeout;\n/**\n * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n */\n\n// Try getting the real promise object from the context, if available. Someone\n// could have overridden it in a test.\nvar Promise = global[Symbol.for('jest-native-promise')] || global.Promise;\n\n// A specialized version of `p-timeout` that does not touch globals.\n// It does not throw on timeout.\nfunction pTimeout(promise, ms, clearTimeout, setTimeout, onTimeout) {\n  return new Promise(function (resolve, reject) {\n    var timer = setTimeout(function () {\n      return resolve(onTimeout());\n    }, ms);\n    promise.then(function (val) {\n      clearTimeout(timer);\n      resolve(val);\n    }, function (err) {\n      clearTimeout(timer);\n      reject(err);\n    });\n  });\n}","map":null,"metadata":{},"sourceType":"script"}