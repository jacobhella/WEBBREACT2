{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _genMapping = require(\"@jridgewell/gen-mapping\");\nvar _traceMapping = require(\"@jridgewell/trace-mapping\");\nvar SourceMap = /*#__PURE__*/function () {\n  function SourceMap(opts, code) {\n    _classCallCheck(this, SourceMap);\n    var _opts$sourceFileName;\n    this._map = void 0;\n    this._rawMappings = void 0;\n    this._sourceFileName = void 0;\n    this._lastGenLine = 0;\n    this._lastSourceLine = 0;\n    this._lastSourceColumn = 0;\n    this._inputMap = void 0;\n    var map = this._map = new _genMapping.GenMapping({\n      sourceRoot: opts.sourceRoot\n    });\n    this._sourceFileName = (_opts$sourceFileName = opts.sourceFileName) == null ? void 0 : _opts$sourceFileName.replace(/\\\\/g, \"/\");\n    this._rawMappings = undefined;\n    if (opts.inputSourceMap) {\n      this._inputMap = new _traceMapping.TraceMap(opts.inputSourceMap);\n      var resolvedSources = this._inputMap.resolvedSources;\n      if (resolvedSources.length) {\n        for (var i = 0; i < resolvedSources.length; i++) {\n          var _this$_inputMap$sourc;\n          (0, _genMapping.setSourceContent)(map, resolvedSources[i], (_this$_inputMap$sourc = this._inputMap.sourcesContent) == null ? void 0 : _this$_inputMap$sourc[i]);\n        }\n      }\n    }\n    if (typeof code === \"string\" && !opts.inputSourceMap) {\n      (0, _genMapping.setSourceContent)(map, this._sourceFileName, code);\n    } else if (typeof code === \"object\") {\n      for (var _i = 0, _Object$keys = Object.keys(code); _i < _Object$keys.length; _i++) {\n        var sourceFileName = _Object$keys[_i];\n        (0, _genMapping.setSourceContent)(map, sourceFileName.replace(/\\\\/g, \"/\"), code[sourceFileName]);\n      }\n    }\n  }\n  _createClass(SourceMap, [{\n    key: \"get\",\n    value: function get() {\n      return (0, _genMapping.toEncodedMap)(this._map);\n    }\n  }, {\n    key: \"getDecoded\",\n    value: function getDecoded() {\n      return (0, _genMapping.toDecodedMap)(this._map);\n    }\n  }, {\n    key: \"getRawMappings\",\n    value: function getRawMappings() {\n      return this._rawMappings || (this._rawMappings = (0, _genMapping.allMappings)(this._map));\n    }\n  }, {\n    key: \"mark\",\n    value: function mark(generated, line, column, identifierName, identifierNamePos, filename) {\n      var _originalMapping;\n      this._rawMappings = undefined;\n      var originalMapping;\n      if (line != null) {\n        if (this._inputMap) {\n          originalMapping = (0, _traceMapping.originalPositionFor)(this._inputMap, {\n            line: line,\n            column: column\n          });\n          if (!originalMapping.name && identifierNamePos) {\n            var originalIdentifierMapping = (0, _traceMapping.originalPositionFor)(this._inputMap, identifierNamePos);\n            if (originalIdentifierMapping.name) {\n              identifierName = originalIdentifierMapping.name;\n            }\n          }\n        } else {\n          originalMapping = {\n            source: (filename == null ? void 0 : filename.replace(/\\\\/g, \"/\")) || this._sourceFileName,\n            line: line,\n            column: column\n          };\n        }\n      }\n      (0, _genMapping.maybeAddMapping)(this._map, {\n        name: identifierName,\n        generated: generated,\n        source: (_originalMapping = originalMapping) == null ? void 0 : _originalMapping.source,\n        original: originalMapping\n      });\n    }\n  }]);\n  return SourceMap;\n}();\nexports.default = SourceMap;","map":null,"metadata":{},"sourceType":"script"}