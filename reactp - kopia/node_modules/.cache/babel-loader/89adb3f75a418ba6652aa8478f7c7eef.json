{"ast":null,"code":"var os = require('os');\nvar utils = require('./lib/utils');\n\n// All notifiers\nvar NotifySend = require('./notifiers/notifysend');\nvar NotificationCenter = require('./notifiers/notificationcenter');\nvar WindowsToaster = require('./notifiers/toaster');\nvar Growl = require('./notifiers/growl');\nvar WindowsBalloon = require('./notifiers/balloon');\nvar options = {\n  withFallback: true\n};\nvar osType = utils.isWSL() ? 'WSL' : os.type();\nswitch (osType) {\n  case 'Linux':\n    module.exports = new NotifySend(options);\n    module.exports.Notification = NotifySend;\n    break;\n  case 'Darwin':\n    module.exports = new NotificationCenter(options);\n    module.exports.Notification = NotificationCenter;\n    break;\n  case 'Windows_NT':\n    if (utils.isLessThanWin8()) {\n      module.exports = new WindowsBalloon(options);\n      module.exports.Notification = WindowsBalloon;\n    } else {\n      module.exports = new WindowsToaster(options);\n      module.exports.Notification = WindowsToaster;\n    }\n    break;\n  case 'WSL':\n    module.exports = new WindowsToaster(options);\n    module.exports.Notification = WindowsToaster;\n    break;\n  default:\n    if (os.type().match(/BSD$/)) {\n      module.exports = new NotifySend(options);\n      module.exports.Notification = NotifySend;\n    } else {\n      module.exports = new Growl(options);\n      module.exports.Notification = Growl;\n    }\n}\n\n// Expose notifiers to give full control.\nmodule.exports.NotifySend = NotifySend;\nmodule.exports.NotificationCenter = NotificationCenter;\nmodule.exports.WindowsToaster = WindowsToaster;\nmodule.exports.WindowsBalloon = WindowsBalloon;\nmodule.exports.Growl = Growl;","map":null,"metadata":{},"sourceType":"script"}