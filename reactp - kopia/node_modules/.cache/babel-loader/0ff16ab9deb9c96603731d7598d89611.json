{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = function (globalObject, globals) {\n  globalObject.process = (0, (_create_process_object || _load_create_process_object()).default)();\n\n  // Keep a reference to \"Promise\", since \"jasmine_light.js\" needs it.\n  globalObject[globalObject.Symbol.for('jest-native-promise')] = Promise;\n\n  // Forward some APIs.\n  DTRACE.forEach(function (dtrace) {\n    globalObject[dtrace] = function () {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return global[dtrace].apply(this, args);\n    };\n  });\n\n  // Forward some others (this breaks the sandbox but for now it's OK).\n  globalObject.Buffer = global.Buffer;\n  globalObject.setImmediate = global.setImmediate;\n  globalObject.clearImmediate = global.clearImmediate;\n  return Object.assign(globalObject, (0, (_deep_cyclic_copy || _load_deep_cyclic_copy()).default)(globals));\n};\nvar _create_process_object;\nfunction _load_create_process_object() {\n  return _create_process_object = _interopRequireDefault(require('./create_process_object'));\n}\nvar _deep_cyclic_copy;\nfunction _load_deep_cyclic_copy() {\n  return _deep_cyclic_copy = _interopRequireDefault(require('./deep_cyclic_copy'));\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n */\n\nvar DTRACE = Object.keys(global).filter(function (key) {\n  return key.startsWith('DTRACE');\n});","map":null,"metadata":{},"sourceType":"script"}