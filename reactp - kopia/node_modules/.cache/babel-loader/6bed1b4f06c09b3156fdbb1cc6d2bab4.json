{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nvar _getIterator2 = require(\"babel-runtime/core-js/get-iterator\");\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\nexports.JSXAttribute = JSXAttribute;\nexports.JSXIdentifier = JSXIdentifier;\nexports.JSXNamespacedName = JSXNamespacedName;\nexports.JSXMemberExpression = JSXMemberExpression;\nexports.JSXSpreadAttribute = JSXSpreadAttribute;\nexports.JSXExpressionContainer = JSXExpressionContainer;\nexports.JSXSpreadChild = JSXSpreadChild;\nexports.JSXText = JSXText;\nexports.JSXElement = JSXElement;\nexports.JSXOpeningElement = JSXOpeningElement;\nexports.JSXClosingElement = JSXClosingElement;\nexports.JSXEmptyExpression = JSXEmptyExpression;\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction JSXAttribute(node) {\n  this.print(node.name, node);\n  if (node.value) {\n    this.token(\"=\");\n    this.print(node.value, node);\n  }\n}\nfunction JSXIdentifier(node) {\n  this.word(node.name);\n}\nfunction JSXNamespacedName(node) {\n  this.print(node.namespace, node);\n  this.token(\":\");\n  this.print(node.name, node);\n}\nfunction JSXMemberExpression(node) {\n  this.print(node.object, node);\n  this.token(\".\");\n  this.print(node.property, node);\n}\nfunction JSXSpreadAttribute(node) {\n  this.token(\"{\");\n  this.token(\"...\");\n  this.print(node.argument, node);\n  this.token(\"}\");\n}\nfunction JSXExpressionContainer(node) {\n  this.token(\"{\");\n  this.print(node.expression, node);\n  this.token(\"}\");\n}\nfunction JSXSpreadChild(node) {\n  this.token(\"{\");\n  this.token(\"...\");\n  this.print(node.expression, node);\n  this.token(\"}\");\n}\nfunction JSXText(node) {\n  this.token(node.value);\n}\nfunction JSXElement(node) {\n  var open = node.openingElement;\n  this.print(open, node);\n  if (open.selfClosing) return;\n  this.indent();\n  for (var _iterator = node.children, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n    var _ref;\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n    var child = _ref;\n    this.print(child, node);\n  }\n  this.dedent();\n  this.print(node.closingElement, node);\n}\nfunction spaceSeparator() {\n  this.space();\n}\nfunction JSXOpeningElement(node) {\n  this.token(\"<\");\n  this.print(node.name, node);\n  if (node.attributes.length > 0) {\n    this.space();\n    this.printJoin(node.attributes, node, {\n      separator: spaceSeparator\n    });\n  }\n  if (node.selfClosing) {\n    this.space();\n    this.token(\"/>\");\n  } else {\n    this.token(\">\");\n  }\n}\nfunction JSXClosingElement(node) {\n  this.token(\"</\");\n  this.print(node.name, node);\n  this.token(\">\");\n}\nfunction JSXEmptyExpression() {}","map":null,"metadata":{},"sourceType":"script"}