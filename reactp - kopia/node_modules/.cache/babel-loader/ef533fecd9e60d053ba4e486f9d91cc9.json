{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = function () {\n  var process = require('process');\n  var newProcess = (0, (_deep_cyclic_copy || _load_deep_cyclic_copy()).default)(process, {\n    blacklist: BLACKLIST,\n    keepPrototype: true\n  });\n  newProcess[Symbol.toStringTag] = 'process';\n\n  // Sequentially execute all constructors over the object.\n  var proto = process;\n  while (proto = Object.getPrototypeOf(proto)) {\n    if (typeof proto.constructor === 'function') {\n      proto.constructor.call(newProcess);\n    }\n  }\n  newProcess.env = createProcessEnv();\n  newProcess.send = function () {};\n  return newProcess;\n};\nvar _deep_cyclic_copy;\nfunction _load_deep_cyclic_copy() {\n  return _deep_cyclic_copy = _interopRequireDefault(require('./deep_cyclic_copy'));\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar BLACKLIST = new Set(['env', 'mainModule', '_events']);\n\n// The \"process.env\" object has a bunch of particularities: first, it does not\n// directly extend from Object; second, it converts any assigned value to a\n// string; and third, it is case-insensitive in Windows. We use a proxy here to\n// mimic it (see https://nodejs.org/api/process.html#process_process_env).\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n */\n\nfunction createProcessEnv() {\n  if (typeof Proxy === 'undefined') {\n    return (0, (_deep_cyclic_copy || _load_deep_cyclic_copy()).default)(process.env);\n  }\n\n  // $FlowFixMe: Apparently Flow does not understand that this is a prototype.\n  var proto = Object.getPrototypeOf(process.env);\n  var real = Object.create(proto);\n  var lookup = {};\n  var proxy = new Proxy(real, {\n    deleteProperty: function deleteProperty(target, key) {\n      for (var name in real) {\n        if (real.hasOwnProperty(name)) {\n          if (typeof key === 'string' && process.platform === 'win32') {\n            if (name.toLowerCase() === key.toLowerCase()) {\n              delete real[name];\n              delete lookup[name.toLowerCase()];\n            }\n          } else {\n            if (key === name) {\n              delete real[name];\n              delete lookup[name];\n            }\n          }\n        }\n      }\n      return true;\n    },\n    get: function get(target, key) {\n      if (typeof key === 'string' && process.platform === 'win32') {\n        return lookup[key in proto ? key : key.toLowerCase()];\n      } else {\n        return real[key];\n      }\n    },\n    set: function set(target, key, value) {\n      var strValue = '' + value;\n      if (typeof key === 'string') {\n        lookup[key.toLowerCase()] = strValue;\n      }\n      real[key] = strValue;\n      return true;\n    }\n  });\n  return Object.assign(proxy, process.env);\n}","map":null,"metadata":{},"sourceType":"script"}