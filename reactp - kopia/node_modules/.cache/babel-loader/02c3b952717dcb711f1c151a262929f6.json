{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nvar _marked = /*#__PURE__*/_regeneratorRuntime().mark(handlerOf),\n  _marked2 = /*#__PURE__*/_regeneratorRuntime().mark(createPresetDescriptors),\n  _marked3 = /*#__PURE__*/_regeneratorRuntime().mark(createPluginDescriptors),\n  _marked4 = /*#__PURE__*/_regeneratorRuntime().mark(createDescriptors);\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createCachedDescriptors = createCachedDescriptors;\nexports.createDescriptor = createDescriptor;\nexports.createUncachedDescriptors = createUncachedDescriptors;\nfunction _gensync() {\n  var data = require(\"gensync\");\n  _gensync = function _gensync() {\n    return data;\n  };\n  return data;\n}\nvar _functional = require(\"../gensync-utils/functional\");\nvar _files = require(\"./files\");\nvar _item = require(\"./item\");\nvar _caching = require(\"./caching\");\nvar _resolveTargets = require(\"./resolve-targets\");\nfunction isEqualDescriptor(a, b) {\n  return a.name === b.name && a.value === b.value && a.options === b.options && a.dirname === b.dirname && a.alias === b.alias && a.ownPass === b.ownPass && (a.file && a.file.request) === (b.file && b.file.request) && (a.file && a.file.resolved) === (b.file && b.file.resolved);\n}\nfunction handlerOf(value) {\n  return _regeneratorRuntime().wrap(function handlerOf$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        return _context.abrupt(\"return\", value);\n      case 1:\n      case \"end\":\n        return _context.stop();\n    }\n  }, _marked);\n}\nfunction optionsWithResolvedBrowserslistConfigFile(options, dirname) {\n  if (typeof options.browserslistConfigFile === \"string\") {\n    options.browserslistConfigFile = (0, _resolveTargets.resolveBrowserslistConfigFile)(options.browserslistConfigFile, dirname);\n  }\n  return options;\n}\nfunction createCachedDescriptors(dirname, options, alias) {\n  var plugins = options.plugins,\n    presets = options.presets,\n    passPerPreset = options.passPerPreset;\n  return {\n    options: optionsWithResolvedBrowserslistConfigFile(options, dirname),\n    plugins: plugins ? function () {\n      return createCachedPluginDescriptors(plugins, dirname)(alias);\n    } : function () {\n      return handlerOf([]);\n    },\n    presets: presets ? function () {\n      return createCachedPresetDescriptors(presets, dirname)(alias)(!!passPerPreset);\n    } : function () {\n      return handlerOf([]);\n    }\n  };\n}\nfunction createUncachedDescriptors(dirname, options, alias) {\n  return {\n    options: optionsWithResolvedBrowserslistConfigFile(options, dirname),\n    plugins: (0, _functional.once)(function () {\n      return createPluginDescriptors(options.plugins || [], dirname, alias);\n    }),\n    presets: (0, _functional.once)(function () {\n      return createPresetDescriptors(options.presets || [], dirname, alias, !!options.passPerPreset);\n    })\n  };\n}\nvar PRESET_DESCRIPTOR_CACHE = new WeakMap();\nvar createCachedPresetDescriptors = (0, _caching.makeWeakCacheSync)(function (items, cache) {\n  var dirname = cache.using(function (dir) {\n    return dir;\n  });\n  return (0, _caching.makeStrongCacheSync)(function (alias) {\n    return (0, _caching.makeStrongCache)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(passPerPreset) {\n      var descriptors;\n      return _regeneratorRuntime().wrap(function _callee$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.delegateYield(createPresetDescriptors(items, dirname, alias, passPerPreset), \"t0\", 1);\n          case 1:\n            descriptors = _context2.t0;\n            return _context2.abrupt(\"return\", descriptors.map(function (desc) {\n              return loadCachedDescriptor(PRESET_DESCRIPTOR_CACHE, desc);\n            }));\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee);\n    }));\n  });\n});\nvar PLUGIN_DESCRIPTOR_CACHE = new WeakMap();\nvar createCachedPluginDescriptors = (0, _caching.makeWeakCacheSync)(function (items, cache) {\n  var dirname = cache.using(function (dir) {\n    return dir;\n  });\n  return (0, _caching.makeStrongCache)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(alias) {\n    var descriptors;\n    return _regeneratorRuntime().wrap(function _callee2$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.delegateYield(createPluginDescriptors(items, dirname, alias), \"t0\", 1);\n        case 1:\n          descriptors = _context3.t0;\n          return _context3.abrupt(\"return\", descriptors.map(function (desc) {\n            return loadCachedDescriptor(PLUGIN_DESCRIPTOR_CACHE, desc);\n          }));\n        case 3:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee2);\n  }));\n});\nvar DEFAULT_OPTIONS = {};\nfunction loadCachedDescriptor(cache, desc) {\n  var value = desc.value,\n    _desc$options = desc.options,\n    options = _desc$options === void 0 ? DEFAULT_OPTIONS : _desc$options;\n  if (options === false) return desc;\n  var cacheByOptions = cache.get(value);\n  if (!cacheByOptions) {\n    cacheByOptions = new WeakMap();\n    cache.set(value, cacheByOptions);\n  }\n  var possibilities = cacheByOptions.get(options);\n  if (!possibilities) {\n    possibilities = [];\n    cacheByOptions.set(options, possibilities);\n  }\n  if (possibilities.indexOf(desc) === -1) {\n    var matches = possibilities.filter(function (possibility) {\n      return isEqualDescriptor(possibility, desc);\n    });\n    if (matches.length > 0) {\n      return matches[0];\n    }\n    possibilities.push(desc);\n  }\n  return desc;\n}\nfunction createPresetDescriptors(items, dirname, alias, passPerPreset) {\n  return _regeneratorRuntime().wrap(function createPresetDescriptors$(_context4) {\n    while (1) switch (_context4.prev = _context4.next) {\n      case 0:\n        return _context4.delegateYield(createDescriptors(\"preset\", items, dirname, alias, passPerPreset), \"t0\", 1);\n      case 1:\n        return _context4.abrupt(\"return\", _context4.t0);\n      case 2:\n      case \"end\":\n        return _context4.stop();\n    }\n  }, _marked2);\n}\nfunction createPluginDescriptors(items, dirname, alias) {\n  return _regeneratorRuntime().wrap(function createPluginDescriptors$(_context5) {\n    while (1) switch (_context5.prev = _context5.next) {\n      case 0:\n        return _context5.delegateYield(createDescriptors(\"plugin\", items, dirname, alias), \"t0\", 1);\n      case 1:\n        return _context5.abrupt(\"return\", _context5.t0);\n      case 2:\n      case \"end\":\n        return _context5.stop();\n    }\n  }, _marked3);\n}\nfunction createDescriptors(type, items, dirname, alias, ownPass) {\n  var descriptors;\n  return _regeneratorRuntime().wrap(function createDescriptors$(_context6) {\n    while (1) switch (_context6.prev = _context6.next) {\n      case 0:\n        return _context6.delegateYield(_gensync().all(items.map(function (item, index) {\n          return createDescriptor(item, dirname, {\n            type: type,\n            alias: \"\".concat(alias, \"$\").concat(index),\n            ownPass: !!ownPass\n          });\n        })), \"t0\", 1);\n      case 1:\n        descriptors = _context6.t0;\n        assertNoDuplicates(descriptors);\n        return _context6.abrupt(\"return\", descriptors);\n      case 4:\n      case \"end\":\n        return _context6.stop();\n    }\n  }, _marked4);\n}\nfunction createDescriptor(pair, dirname, _ref) {\n  var type = _ref.type,\n    alias = _ref.alias,\n    ownPass = _ref.ownPass;\n  return /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n    var desc, name, options, value, _value, _value2, _value3, _value4, file, filepath, resolver, request, _yield$resolver;\n    return _regeneratorRuntime().wrap(function _callee3$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          desc = (0, _item.getItemDescriptor)(pair);\n          if (!desc) {\n            _context7.next = 3;\n            break;\n          }\n          return _context7.abrupt(\"return\", desc);\n        case 3:\n          value = pair;\n          if (Array.isArray(value)) {\n            if (value.length === 3) {\n              _value = value;\n              _value2 = _slicedToArray(_value, 3);\n              value = _value2[0];\n              options = _value2[1];\n              name = _value2[2];\n            } else {\n              _value3 = value;\n              _value4 = _slicedToArray(_value3, 2);\n              value = _value4[0];\n              options = _value4[1];\n            }\n          }\n          file = undefined;\n          filepath = null;\n          if (!(typeof value === \"string\")) {\n            _context7.next = 17;\n            break;\n          }\n          if (!(typeof type !== \"string\")) {\n            _context7.next = 10;\n            break;\n          }\n          throw new Error(\"To resolve a string-based item, the type of item must be given\");\n        case 10:\n          resolver = type === \"plugin\" ? _files.loadPlugin : _files.loadPreset;\n          request = value;\n          return _context7.delegateYield(resolver(value, dirname), \"t0\", 13);\n        case 13:\n          _yield$resolver = _context7.t0;\n          filepath = _yield$resolver.filepath;\n          value = _yield$resolver.value;\n          file = {\n            request: request,\n            resolved: filepath\n          };\n        case 17:\n          if (value) {\n            _context7.next = 19;\n            break;\n          }\n          throw new Error(\"Unexpected falsy value: \".concat(String(value)));\n        case 19:\n          if (!(typeof value === \"object\" && value.__esModule)) {\n            _context7.next = 25;\n            break;\n          }\n          if (!value.default) {\n            _context7.next = 24;\n            break;\n          }\n          value = value.default;\n          _context7.next = 25;\n          break;\n        case 24:\n          throw new Error(\"Must export a default export when using ES6 modules.\");\n        case 25:\n          if (!(typeof value !== \"object\" && typeof value !== \"function\")) {\n            _context7.next = 27;\n            break;\n          }\n          throw new Error(\"Unsupported format: \".concat(typeof value, \". Expected an object or a function.\"));\n        case 27:\n          if (!(filepath !== null && typeof value === \"object\" && value)) {\n            _context7.next = 29;\n            break;\n          }\n          throw new Error(\"Plugin/Preset files are not allowed to export objects, only functions. In \".concat(filepath));\n        case 29:\n          return _context7.abrupt(\"return\", {\n            name: name,\n            alias: filepath || alias,\n            value: value,\n            options: options,\n            dirname: dirname,\n            ownPass: ownPass,\n            file: file\n          });\n        case 30:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee3);\n  })();\n}\nfunction assertNoDuplicates(items) {\n  var map = new Map();\n  var _iterator = _createForOfIteratorHelper(items),\n    _step;\n  try {\n    var _loop = function _loop() {\n      var item = _step.value;\n      if (typeof item.value !== \"function\") return \"continue\";\n      var nameMap = map.get(item.value);\n      if (!nameMap) {\n        nameMap = new Set();\n        map.set(item.value, nameMap);\n      }\n      if (nameMap.has(item.name)) {\n        var conflicts = items.filter(function (i) {\n          return i.value === item.value;\n        });\n        throw new Error([\"Duplicate plugin/preset detected.\", \"If you'd like to use two separate instances of a plugin,\", \"they need separate names, e.g.\", \"\", \"  plugins: [\", \"    ['some-plugin', {}],\", \"    ['some-plugin', {}, 'some unique name'],\", \"  ]\", \"\", \"Duplicates detected are:\", \"\".concat(JSON.stringify(conflicts, null, 2))].join(\"\\n\"));\n      }\n      nameMap.add(item.name);\n    };\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _ret = _loop();\n      if (_ret === \"continue\") continue;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\n0 && 0;","map":null,"metadata":{},"sourceType":"script"}