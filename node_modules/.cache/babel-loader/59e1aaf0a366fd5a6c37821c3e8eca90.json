{"ast":null,"code":"\"use strict\";\n\nvar _taggedTemplateLiteral = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/taggedTemplateLiteral\");\nvar _slicedToArray = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildDynamicImport = buildDynamicImport;\nexports.getDynamicImportSource = getDynamicImportSource;\nvar t = require(\"@babel/types\");\nvar _template = require(\"@babel/template\");\nfunction getDynamicImportSource(node) {\n  var _node$arguments = _slicedToArray(node.arguments, 1),\n    source = _node$arguments[0];\n  return t.isStringLiteral(source) || t.isTemplateLiteral(source) ? source : _template.default.expression.ast(_templateObject || (_templateObject = _taggedTemplateLiteral([\"`${\", \"}`\"], [\"\\\\`\\\\${\", \"}\\\\`\"])), source);\n}\nfunction buildDynamicImport(node, deferToThen, wrapWithPromise, builder) {\n  var _node$arguments2 = _slicedToArray(node.arguments, 1),\n    specifier = _node$arguments2[0];\n  if (t.isStringLiteral(specifier) || t.isTemplateLiteral(specifier) && specifier.quasis.length === 0) {\n    if (deferToThen) {\n      return _template.default.expression.ast(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n        Promise.resolve().then(() => \", \")\\n      \"])), builder(specifier));\n    } else return builder(specifier);\n  }\n  var specifierToString = t.isTemplateLiteral(specifier) ? t.identifier(\"specifier\") : t.templateLiteral([t.templateElement({\n    raw: \"\"\n  }), t.templateElement({\n    raw: \"\"\n  })], [t.identifier(\"specifier\")]);\n  if (deferToThen) {\n    return _template.default.expression.ast(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n      (specifier =>\\n        new Promise(r => r(\", \"))\\n          .then(s => \", \")\\n      )(\", \")\\n    \"])), specifierToString, builder(t.identifier(\"s\")), specifier);\n  } else if (wrapWithPromise) {\n    return _template.default.expression.ast(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n      (specifier =>\\n        new Promise(r => r(\", \"))\\n      )(\", \")\\n    \"])), builder(specifierToString), specifier);\n  } else {\n    return _template.default.expression.ast(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n      (specifier => \", \")(\", \")\\n    \"])), builder(specifierToString), specifier);\n  }\n}","map":null,"metadata":{},"sourceType":"script"}