{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.DOCUMENTATION_NOTE = undefined;\nexports.default = validateCLIOptions;\nvar _chalk;\nfunction _load_chalk() {\n  return _chalk = _interopRequireDefault(require('chalk'));\n}\nvar _utils;\nfunction _load_utils() {\n  return _utils = require('./utils');\n}\nvar _deprecated;\nfunction _load_deprecated() {\n  return _deprecated = require('./deprecated');\n}\nvar _default_config;\nfunction _load_default_config() {\n  return _default_config = _interopRequireDefault(require('./default_config'));\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar BULLET = (_chalk || _load_chalk()).default.bold(\"\\u25CF\");\n/**\n * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n */\n\nvar DOCUMENTATION_NOTE = exports.DOCUMENTATION_NOTE = \"  \".concat((_chalk || _load_chalk()).default.bold('CLI Options Documentation:'), \"\\n  https://jestjs.io/docs/en/cli.html\\n\");\nvar createCLIValidationError = function createCLIValidationError(unrecognizedOptions, allowedOptions) {\n  var title = \"\".concat(BULLET, \" Unrecognized CLI Parameter\");\n  var message;\n  var comment = \"  \".concat((_chalk || _load_chalk()).default.bold('CLI Options Documentation'), \":\\n\") + \"  https://jestjs.io/docs/en/cli.html\\n\";\n  if (unrecognizedOptions.length === 1) {\n    var unrecognized = unrecognizedOptions[0];\n    var didYouMeanMessage = (0, (_utils || _load_utils()).createDidYouMeanMessage)(unrecognized, Array.from(allowedOptions));\n    message = \"  Unrecognized option \".concat((_chalk || _load_chalk()).default.bold((0, (_utils || _load_utils()).format)(unrecognized)), \".\") + (didYouMeanMessage ? \" \".concat(didYouMeanMessage) : '');\n  } else {\n    title += 's';\n    message = \"  Following options were not recognized:\\n\" + \"  \".concat((_chalk || _load_chalk()).default.bold((0, (_utils || _load_utils()).format)(unrecognizedOptions)));\n  }\n  return new (_utils || _load_utils()).ValidationError(title, message, comment);\n};\nvar logDeprecatedOptions = function logDeprecatedOptions(deprecatedOptions, deprecationEntries, argv) {\n  deprecatedOptions.forEach(function (opt) {\n    (0, (_deprecated || _load_deprecated()).deprecationWarning)(argv, opt, deprecationEntries, Object.assign({}, (_default_config || _load_default_config()).default, {\n      comment: DOCUMENTATION_NOTE\n    }));\n  });\n};\nfunction validateCLIOptions(argv, options) {\n  var yargsSpecialOptions = ['$0', '_', 'help', 'h'];\n  var deprecationEntries = options.deprecationEntries || {};\n  var allowedOptions = Object.keys(options).reduce(function (acc, option) {\n    return acc.add(option).add(options[option].alias || option);\n  }, new Set(yargsSpecialOptions));\n  var unrecognizedOptions = Object.keys(argv).filter(function (arg) {\n    return !allowedOptions.has(arg);\n  });\n  if (unrecognizedOptions.length) {\n    throw createCLIValidationError(unrecognizedOptions, allowedOptions);\n  }\n  var CLIDeprecations = Object.keys(deprecationEntries).reduce(function (acc, entry) {\n    if (options[entry]) {\n      acc[entry] = deprecationEntries[entry];\n      if (options[entry].alias) {\n        acc[options[entry].alias] = deprecationEntries[entry];\n      }\n    }\n    return acc;\n  }, {});\n  var deprecations = new Set(Object.keys(CLIDeprecations));\n  var deprecatedOptions = Object.keys(argv).filter(function (arg) {\n    return deprecations.has(arg) && argv[arg] != null;\n  });\n  if (deprecatedOptions.length) {\n    logDeprecatedOptions(deprecatedOptions, CLIDeprecations, argv);\n  }\n  return true;\n}","map":null,"metadata":{},"sourceType":"script"}