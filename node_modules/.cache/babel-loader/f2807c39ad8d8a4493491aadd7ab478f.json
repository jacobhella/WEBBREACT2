{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DEFAULT_EXTENSIONS = void 0;\nObject.defineProperty(exports, \"File\", {\n  enumerable: true,\n  get: function get() {\n    return _file.default;\n  }\n});\nexports.OptionManager = void 0;\nexports.Plugin = Plugin;\nObject.defineProperty(exports, \"buildExternalHelpers\", {\n  enumerable: true,\n  get: function get() {\n    return _buildExternalHelpers.default;\n  }\n});\nObject.defineProperty(exports, \"createConfigItem\", {\n  enumerable: true,\n  get: function get() {\n    return _config.createConfigItem;\n  }\n});\nObject.defineProperty(exports, \"createConfigItemAsync\", {\n  enumerable: true,\n  get: function get() {\n    return _config.createConfigItemAsync;\n  }\n});\nObject.defineProperty(exports, \"createConfigItemSync\", {\n  enumerable: true,\n  get: function get() {\n    return _config.createConfigItemSync;\n  }\n});\nObject.defineProperty(exports, \"getEnv\", {\n  enumerable: true,\n  get: function get() {\n    return _environment.getEnv;\n  }\n});\nObject.defineProperty(exports, \"loadOptions\", {\n  enumerable: true,\n  get: function get() {\n    return _config.loadOptions;\n  }\n});\nObject.defineProperty(exports, \"loadOptionsAsync\", {\n  enumerable: true,\n  get: function get() {\n    return _config.loadOptionsAsync;\n  }\n});\nObject.defineProperty(exports, \"loadOptionsSync\", {\n  enumerable: true,\n  get: function get() {\n    return _config.loadOptionsSync;\n  }\n});\nObject.defineProperty(exports, \"loadPartialConfig\", {\n  enumerable: true,\n  get: function get() {\n    return _config.loadPartialConfig;\n  }\n});\nObject.defineProperty(exports, \"loadPartialConfigAsync\", {\n  enumerable: true,\n  get: function get() {\n    return _config.loadPartialConfigAsync;\n  }\n});\nObject.defineProperty(exports, \"loadPartialConfigSync\", {\n  enumerable: true,\n  get: function get() {\n    return _config.loadPartialConfigSync;\n  }\n});\nObject.defineProperty(exports, \"parse\", {\n  enumerable: true,\n  get: function get() {\n    return _parse.parse;\n  }\n});\nObject.defineProperty(exports, \"parseAsync\", {\n  enumerable: true,\n  get: function get() {\n    return _parse.parseAsync;\n  }\n});\nObject.defineProperty(exports, \"parseSync\", {\n  enumerable: true,\n  get: function get() {\n    return _parse.parseSync;\n  }\n});\nObject.defineProperty(exports, \"resolvePlugin\", {\n  enumerable: true,\n  get: function get() {\n    return _files.resolvePlugin;\n  }\n});\nObject.defineProperty(exports, \"resolvePreset\", {\n  enumerable: true,\n  get: function get() {\n    return _files.resolvePreset;\n  }\n});\nObject.defineProperty((0, exports), \"template\", {\n  enumerable: true,\n  get: function get() {\n    return _template().default;\n  }\n});\nObject.defineProperty((0, exports), \"tokTypes\", {\n  enumerable: true,\n  get: function get() {\n    return _parser().tokTypes;\n  }\n});\nObject.defineProperty(exports, \"transform\", {\n  enumerable: true,\n  get: function get() {\n    return _transform.transform;\n  }\n});\nObject.defineProperty(exports, \"transformAsync\", {\n  enumerable: true,\n  get: function get() {\n    return _transform.transformAsync;\n  }\n});\nObject.defineProperty(exports, \"transformFile\", {\n  enumerable: true,\n  get: function get() {\n    return _transformFile.transformFile;\n  }\n});\nObject.defineProperty(exports, \"transformFileAsync\", {\n  enumerable: true,\n  get: function get() {\n    return _transformFile.transformFileAsync;\n  }\n});\nObject.defineProperty(exports, \"transformFileSync\", {\n  enumerable: true,\n  get: function get() {\n    return _transformFile.transformFileSync;\n  }\n});\nObject.defineProperty(exports, \"transformFromAst\", {\n  enumerable: true,\n  get: function get() {\n    return _transformAst.transformFromAst;\n  }\n});\nObject.defineProperty(exports, \"transformFromAstAsync\", {\n  enumerable: true,\n  get: function get() {\n    return _transformAst.transformFromAstAsync;\n  }\n});\nObject.defineProperty(exports, \"transformFromAstSync\", {\n  enumerable: true,\n  get: function get() {\n    return _transformAst.transformFromAstSync;\n  }\n});\nObject.defineProperty(exports, \"transformSync\", {\n  enumerable: true,\n  get: function get() {\n    return _transform.transformSync;\n  }\n});\nObject.defineProperty((0, exports), \"traverse\", {\n  enumerable: true,\n  get: function get() {\n    return _traverse().default;\n  }\n});\nexports.version = exports.types = void 0;\nvar _file = require(\"./transformation/file/file\");\nvar _buildExternalHelpers = require(\"./tools/build-external-helpers\");\nvar _files = require(\"./config/files\");\nvar _environment = require(\"./config/helpers/environment\");\nfunction _types() {\n  var data = require(\"@babel/types\");\n  _types = function _types() {\n    return data;\n  };\n  return data;\n}\nObject.defineProperty((0, exports), \"types\", {\n  enumerable: true,\n  get: function get() {\n    return _types();\n  }\n});\nfunction _parser() {\n  var data = require(\"@babel/parser\");\n  _parser = function _parser() {\n    return data;\n  };\n  return data;\n}\nfunction _traverse() {\n  var data = require(\"@babel/traverse\");\n  _traverse = function _traverse() {\n    return data;\n  };\n  return data;\n}\nfunction _template() {\n  var data = require(\"@babel/template\");\n  _template = function _template() {\n    return data;\n  };\n  return data;\n}\nvar _config = require(\"./config\");\nvar _transform = require(\"./transform\");\nvar _transformFile = require(\"./transform-file\");\nvar _transformAst = require(\"./transform-ast\");\nvar _parse = require(\"./parse\");\nfunction _module() {\n  var data = require(\"module\");\n  _module = function _module() {\n    return data;\n  };\n  return data;\n}\nvar thisFile = require(\"./index\");\nvar version = \"7.21.0\";\nexports.version = version;\nvar DEFAULT_EXTENSIONS = Object.freeze([\".js\", \".jsx\", \".es6\", \".es\", \".mjs\", \".cjs\"]);\nexports.DEFAULT_EXTENSIONS = DEFAULT_EXTENSIONS;\nvar OptionManager = /*#__PURE__*/function () {\n  function OptionManager() {\n    _classCallCheck(this, OptionManager);\n  }\n  _createClass(OptionManager, [{\n    key: \"init\",\n    value: function init(opts) {\n      return (0, _config.loadOptionsSync)(opts);\n    }\n  }]);\n  return OptionManager;\n}();\nexports.OptionManager = OptionManager;\nfunction Plugin(alias) {\n  throw new Error(\"The (\".concat(alias, \") Babel 5 plugin is being run with an unsupported Babel version.\"));\n}\n;\n0 && (exports.types = exports.traverse = exports.tokTypes = exports.template = 0);","map":null,"metadata":{},"sourceType":"script"}