{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.isReactComponent = undefined;\nexports.isCompatTag = isCompatTag;\nexports.buildChildren = buildChildren;\nvar _index = require(\"./index\");\nvar t = _interopRequireWildcard(_index);\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nvar isReactComponent = exports.isReactComponent = t.buildMatchMemberExpression(\"React.Component\");\nfunction isCompatTag(tagName) {\n  return !!tagName && /^[a-z]|\\-/.test(tagName);\n}\nfunction cleanJSXElementLiteralChild(child, args) {\n  var lines = child.value.split(/\\r\\n|\\n|\\r/);\n  var lastNonEmptyLine = 0;\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i].match(/[^ \\t]/)) {\n      lastNonEmptyLine = i;\n    }\n  }\n  var str = \"\";\n  for (var _i = 0; _i < lines.length; _i++) {\n    var line = lines[_i];\n    var isFirstLine = _i === 0;\n    var isLastLine = _i === lines.length - 1;\n    var isLastNonEmptyLine = _i === lastNonEmptyLine;\n    var trimmedLine = line.replace(/\\t/g, \" \");\n    if (!isFirstLine) {\n      trimmedLine = trimmedLine.replace(/^[ ]+/, \"\");\n    }\n    if (!isLastLine) {\n      trimmedLine = trimmedLine.replace(/[ ]+$/, \"\");\n    }\n    if (trimmedLine) {\n      if (!isLastNonEmptyLine) {\n        trimmedLine += \" \";\n      }\n      str += trimmedLine;\n    }\n  }\n  if (str) args.push(t.stringLiteral(str));\n}\nfunction buildChildren(node) {\n  var elems = [];\n  for (var i = 0; i < node.children.length; i++) {\n    var child = node.children[i];\n    if (t.isJSXText(child)) {\n      cleanJSXElementLiteralChild(child, elems);\n      continue;\n    }\n    if (t.isJSXExpressionContainer(child)) child = child.expression;\n    if (t.isJSXEmptyExpression(child)) continue;\n    elems.push(child);\n  }\n  return elems;\n}","map":null,"metadata":{},"sourceType":"script"}