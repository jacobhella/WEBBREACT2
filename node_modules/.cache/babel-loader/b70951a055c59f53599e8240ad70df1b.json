{"ast":null,"code":"'use strict';\n\nvar x = module.exports;\nvar ESC = \"\\x1B[\";\nvar OSC = \"\\x1B]\";\nvar BEL = \"\\x07\";\nvar SEP = ';';\nvar isTerminalApp = process.env.TERM_PROGRAM === 'Apple_Terminal';\nx.cursorTo = function (x, y) {\n  if (typeof x !== 'number') {\n    throw new TypeError('The `x` argument is required');\n  }\n  if (typeof y !== 'number') {\n    return ESC + (x + 1) + 'G';\n  }\n  return ESC + (y + 1) + ';' + (x + 1) + 'H';\n};\nx.cursorMove = function (x, y) {\n  if (typeof x !== 'number') {\n    throw new TypeError('The `x` argument is required');\n  }\n  var ret = '';\n  if (x < 0) {\n    ret += ESC + -x + 'D';\n  } else if (x > 0) {\n    ret += ESC + x + 'C';\n  }\n  if (y < 0) {\n    ret += ESC + -y + 'A';\n  } else if (y > 0) {\n    ret += ESC + y + 'B';\n  }\n  return ret;\n};\nx.cursorUp = function (count) {\n  return ESC + (typeof count === 'number' ? count : 1) + 'A';\n};\nx.cursorDown = function (count) {\n  return ESC + (typeof count === 'number' ? count : 1) + 'B';\n};\nx.cursorForward = function (count) {\n  return ESC + (typeof count === 'number' ? count : 1) + 'C';\n};\nx.cursorBackward = function (count) {\n  return ESC + (typeof count === 'number' ? count : 1) + 'D';\n};\nx.cursorLeft = ESC + 'G';\nx.cursorSavePosition = ESC + (isTerminalApp ? '7' : 's');\nx.cursorRestorePosition = ESC + (isTerminalApp ? '8' : 'u');\nx.cursorGetPosition = ESC + '6n';\nx.cursorNextLine = ESC + 'E';\nx.cursorPrevLine = ESC + 'F';\nx.cursorHide = ESC + '?25l';\nx.cursorShow = ESC + '?25h';\nx.eraseLines = function (count) {\n  var clear = '';\n  for (var i = 0; i < count; i++) {\n    clear += x.eraseLine + (i < count - 1 ? x.cursorUp() : '');\n  }\n  if (count) {\n    clear += x.cursorLeft;\n  }\n  return clear;\n};\nx.eraseEndLine = ESC + 'K';\nx.eraseStartLine = ESC + '1K';\nx.eraseLine = ESC + '2K';\nx.eraseDown = ESC + 'J';\nx.eraseUp = ESC + '1J';\nx.eraseScreen = ESC + '2J';\nx.scrollUp = ESC + 'S';\nx.scrollDown = ESC + 'T';\nx.clearScreen = \"\\x1Bc\";\nx.clearTerminal = process.platform === 'win32' ? \"\".concat(x.eraseScreen).concat(ESC, \"0f\") : // 1. Erases the screen (Only done in case `2` is not supported)\n// 2. Erases the whole screen including scrollback buffer\n// 3. Moves cursor to the top-left position\n// More info: https://www.real-world-systems.com/docs/ANSIcode.html\n\"\".concat(x.eraseScreen).concat(ESC, \"3J\").concat(ESC, \"H\");\nx.beep = BEL;\nx.link = function (text, url) {\n  return [OSC, '8', SEP, SEP, url, BEL, text, OSC, '8', SEP, SEP, BEL].join('');\n};\nx.image = function (buf, opts) {\n  opts = opts || {};\n  var ret = OSC + '1337;File=inline=1';\n  if (opts.width) {\n    ret += \";width=\".concat(opts.width);\n  }\n  if (opts.height) {\n    ret += \";height=\".concat(opts.height);\n  }\n  if (opts.preserveAspectRatio === false) {\n    ret += ';preserveAspectRatio=0';\n  }\n  return ret + ':' + buf.toString('base64') + BEL;\n};\nx.iTerm = {};\nx.iTerm.setCwd = function (cwd) {\n  return OSC + '50;CurrentDir=' + (cwd || process.cwd()) + BEL;\n};","map":null,"metadata":{},"sourceType":"script"}