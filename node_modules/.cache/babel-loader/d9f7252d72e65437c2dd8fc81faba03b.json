{"ast":null,"code":"\"use strict\";\n\nmodule.exports = {\n  filename: {\n    type: \"filename\",\n    description: \"filename to use when reading from stdin - this will be used in source-maps, errors etc\",\n    default: \"unknown\",\n    shorthand: \"f\"\n  },\n  filenameRelative: {\n    hidden: true,\n    type: \"string\"\n  },\n  inputSourceMap: {\n    hidden: true\n  },\n  env: {\n    hidden: true,\n    default: {}\n  },\n  mode: {\n    description: \"\",\n    hidden: true\n  },\n  retainLines: {\n    type: \"boolean\",\n    default: false,\n    description: \"retain line numbers - will result in really ugly code\"\n  },\n  highlightCode: {\n    description: \"enable/disable ANSI syntax highlighting of code frames (on by default)\",\n    type: \"boolean\",\n    default: true\n  },\n  suppressDeprecationMessages: {\n    type: \"boolean\",\n    default: false,\n    hidden: true\n  },\n  presets: {\n    type: \"list\",\n    description: \"\",\n    default: []\n  },\n  plugins: {\n    type: \"list\",\n    default: [],\n    description: \"\"\n  },\n  ignore: {\n    type: \"list\",\n    description: \"list of glob paths to **not** compile\",\n    default: []\n  },\n  only: {\n    type: \"list\",\n    description: \"list of glob paths to **only** compile\"\n  },\n  code: {\n    hidden: true,\n    default: true,\n    type: \"boolean\"\n  },\n  metadata: {\n    hidden: true,\n    default: true,\n    type: \"boolean\"\n  },\n  ast: {\n    hidden: true,\n    default: true,\n    type: \"boolean\"\n  },\n  extends: {\n    type: \"string\",\n    hidden: true\n  },\n  comments: {\n    type: \"boolean\",\n    default: true,\n    description: \"write comments to generated output (true by default)\"\n  },\n  shouldPrintComment: {\n    hidden: true,\n    description: \"optional callback to control whether a comment should be inserted, when this is used the comments option is ignored\"\n  },\n  wrapPluginVisitorMethod: {\n    hidden: true,\n    description: \"optional callback to wrap all visitor methods\"\n  },\n  compact: {\n    type: \"booleanString\",\n    default: \"auto\",\n    description: \"do not include superfluous whitespace characters and line terminators [true|false|auto]\"\n  },\n  minified: {\n    type: \"boolean\",\n    default: false,\n    description: \"save as much bytes when printing [true|false]\"\n  },\n  sourceMap: {\n    alias: \"sourceMaps\",\n    hidden: true\n  },\n  sourceMaps: {\n    type: \"booleanString\",\n    description: \"[true|false|inline]\",\n    default: false,\n    shorthand: \"s\"\n  },\n  sourceMapTarget: {\n    type: \"string\",\n    description: \"set `file` on returned source map\"\n  },\n  sourceFileName: {\n    type: \"string\",\n    description: \"set `sources[0]` on returned source map\"\n  },\n  sourceRoot: {\n    type: \"filename\",\n    description: \"the root from which all sources are relative\"\n  },\n  babelrc: {\n    description: \"Whether or not to look up .babelrc and .babelignore files\",\n    type: \"boolean\",\n    default: true\n  },\n  sourceType: {\n    description: \"\",\n    default: \"module\"\n  },\n  auxiliaryCommentBefore: {\n    type: \"string\",\n    description: \"print a comment before any injected non-user code\"\n  },\n  auxiliaryCommentAfter: {\n    type: \"string\",\n    description: \"print a comment after any injected non-user code\"\n  },\n  resolveModuleSource: {\n    hidden: true\n  },\n  getModuleId: {\n    hidden: true\n  },\n  moduleRoot: {\n    type: \"filename\",\n    description: \"optional prefix for the AMD module formatter that will be prepend to the filename on module definitions\"\n  },\n  moduleIds: {\n    type: \"boolean\",\n    default: false,\n    shorthand: \"M\",\n    description: \"insert an explicit id for modules\"\n  },\n  moduleId: {\n    description: \"specify a custom name for module ids\",\n    type: \"string\"\n  },\n  passPerPreset: {\n    description: \"Whether to spawn a traversal pass per a preset. By default all presets are merged.\",\n    type: \"boolean\",\n    default: false,\n    hidden: true\n  },\n  parserOpts: {\n    description: \"Options to pass into the parser, or to change parsers (parserOpts.parser)\",\n    default: false\n  },\n  generatorOpts: {\n    description: \"Options to pass into the generator, or to change generators (generatorOpts.generator)\",\n    default: false\n  }\n};","map":null,"metadata":{},"sourceType":"script"}