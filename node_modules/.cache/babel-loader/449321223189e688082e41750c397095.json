{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = function (source, filename, globalConfig, config) {\n  var coverageOptions = {\n    collectCoverage: globalConfig.collectCoverage,\n    collectCoverageFrom: globalConfig.collectCoverageFrom,\n    collectCoverageOnlyFrom: globalConfig.collectCoverageOnlyFrom\n  };\n  if ((_jestRuntime || _load_jestRuntime()).default.shouldInstrument(filename, coverageOptions, config)) {\n    // Transform file without instrumentation first, to make sure produced\n    // source code is ES6 (no flowtypes etc.) and can be instrumented\n    var transformResult = new (_jestRuntime || _load_jestRuntime()).default.ScriptTransformer(config).transformSource(filename, source, false);\n    var instrumenter = (0, (_istanbulLibInstrument || _load_istanbulLibInstrument()).createInstrumenter)();\n    instrumenter.instrumentSync(transformResult.code, filename);\n    return {\n      coverage: instrumenter.fileCoverage,\n      sourceMapPath: transformResult.sourceMapPath\n    };\n  } else {\n    return null;\n  }\n};\nvar _istanbulLibInstrument;\nfunction _load_istanbulLibInstrument() {\n  return _istanbulLibInstrument = require('istanbul-lib-instrument');\n}\nvar _jestRuntime;\nfunction _load_jestRuntime() {\n  return _jestRuntime = _interopRequireDefault(require('jest-runtime'));\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}","map":null,"metadata":{},"sourceType":"script"}