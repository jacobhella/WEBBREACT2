{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar _path;\nfunction _load_path() {\n  return _path = _interopRequireDefault(require('path'));\n}\nvar _chalk;\nfunction _load_chalk() {\n  return _chalk = _interopRequireDefault(require('chalk'));\n}\nvar _slash;\nfunction _load_slash() {\n  return _slash = _interopRequireDefault(require('slash'));\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n */\n\nexports.default = function (root, verbose, buffer) {\n  var TITLE_INDENT = verbose ? '  ' : '    ';\n  var CONSOLE_INDENT = TITLE_INDENT + '  ';\n  return buffer.reduce(function (output, _ref) {\n    var type = _ref.type,\n      message = _ref.message,\n      origin = _ref.origin;\n    origin = (0, (_slash || _load_slash()).default)((_path || _load_path()).default.relative(root, origin));\n    message = message.split(/\\n/).map(function (line) {\n      return CONSOLE_INDENT + line;\n    }).join('\\n');\n    var typeMessage = 'console.' + type;\n    if (type === 'warn') {\n      message = (_chalk || _load_chalk()).default.yellow(message);\n      typeMessage = (_chalk || _load_chalk()).default.yellow(typeMessage);\n    } else if (type === 'error') {\n      message = (_chalk || _load_chalk()).default.red(message);\n      typeMessage = (_chalk || _load_chalk()).default.red(typeMessage);\n    }\n    return output + TITLE_INDENT + (_chalk || _load_chalk()).default.dim(typeMessage) + ' ' + (_chalk || _load_chalk()).default.dim(origin) + '\\n' + message + '\\n';\n  }, '');\n};","map":null,"metadata":{},"sourceType":"script"}