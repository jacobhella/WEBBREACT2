{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\nvar _get = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar _assert;\nfunction _load_assert() {\n  return _assert = _interopRequireDefault(require('assert'));\n}\nvar _util;\nfunction _load_util() {\n  return _util = require('util');\n}\nvar _console;\nfunction _load_console() {\n  return _console = require('console');\n}\nvar _chalk;\nfunction _load_chalk() {\n  return _chalk = _interopRequireDefault(require('chalk'));\n}\nvar _clear_line;\nfunction _load_clear_line() {\n  return _clear_line = _interopRequireDefault(require('./clear_line'));\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n */\n/* global stream$Writable */\nvar CustomConsole = /*#__PURE__*/function (_Console) {\n  _inherits(CustomConsole, _Console);\n  function CustomConsole(stdout, stderr, formatBuffer) {\n    var _this;\n    _classCallCheck(this, CustomConsole);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomConsole).call(this, stdout, stderr));\n    _this._formatBuffer = formatBuffer || function (type, message) {\n      return message;\n    };\n    _this._counters = {};\n    _this._timers = {};\n    _this._groupDepth = 0;\n    return _this;\n  }\n  _createClass(CustomConsole, [{\n    key: \"_logToParentConsole\",\n    value: function _logToParentConsole(message) {\n      _get(_getPrototypeOf(CustomConsole.prototype), \"log\", this).call(this, message);\n    }\n  }, {\n    key: \"_log\",\n    value: function _log(type, message) {\n      (0, (_clear_line || _load_clear_line()).default)(this._stdout);\n      this._logToParentConsole(this._formatBuffer(type, '  '.repeat(this._groupDepth) + message));\n    }\n  }, {\n    key: \"assert\",\n    value: function assert() {\n      try {\n        (_assert || _load_assert()).default.apply(undefined, arguments);\n      } catch (error) {\n        this._log('assert', error.toString());\n      }\n    }\n  }, {\n    key: \"count\",\n    value: function count() {\n      var label = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';\n      if (!this._counters[label]) {\n        this._counters[label] = 0;\n      }\n      this._log('count', (0, (_util || _load_util()).format)(\"\".concat(label, \": \").concat(++this._counters[label])));\n    }\n  }, {\n    key: \"countReset\",\n    value: function countReset() {\n      var label = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';\n      this._counters[label] = 0;\n    }\n  }, {\n    key: \"debug\",\n    value: function debug() {\n      this._log('debug', (_util || _load_util()).format.apply(undefined, arguments));\n    }\n  }, {\n    key: \"dir\",\n    value: function dir() {\n      this._log('dir', (_util || _load_util()).format.apply(undefined, arguments));\n    }\n  }, {\n    key: \"dirxml\",\n    value: function dirxml() {\n      this._log('dirxml', (_util || _load_util()).format.apply(undefined, arguments));\n    }\n  }, {\n    key: \"error\",\n    value: function error() {\n      this._log('error', (_util || _load_util()).format.apply(undefined, arguments));\n    }\n  }, {\n    key: \"group\",\n    value: function group() {\n      this._groupDepth++;\n      if (arguments.length > 0) {\n        this._log('group', (_chalk || _load_chalk()).default.bold((_util || _load_util()).format.apply(undefined, arguments)));\n      }\n    }\n  }, {\n    key: \"groupCollapsed\",\n    value: function groupCollapsed() {\n      this._groupDepth++;\n      if (arguments.length > 0) {\n        this._log('groupCollapsed', (_chalk || _load_chalk()).default.bold((_util || _load_util()).format.apply(undefined, arguments)));\n      }\n    }\n  }, {\n    key: \"groupEnd\",\n    value: function groupEnd() {\n      if (this._groupDepth > 0) {\n        this._groupDepth--;\n      }\n    }\n  }, {\n    key: \"info\",\n    value: function info() {\n      this._log('info', (_util || _load_util()).format.apply(undefined, arguments));\n    }\n  }, {\n    key: \"log\",\n    value: function log() {\n      this._log('log', (_util || _load_util()).format.apply(undefined, arguments));\n    }\n  }, {\n    key: \"time\",\n    value: function time() {\n      var label = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';\n      if (this._timers[label]) {\n        return;\n      }\n      this._timers[label] = new Date();\n    }\n  }, {\n    key: \"timeEnd\",\n    value: function timeEnd() {\n      var label = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';\n      var startTime = this._timers[label];\n      if (startTime) {\n        var endTime = new Date();\n        var time = endTime - startTime;\n        this._log('time', (0, (_util || _load_util()).format)(\"\".concat(label, \": \").concat(time, \"ms\")));\n        delete this._timers[label];\n      }\n    }\n  }, {\n    key: \"warn\",\n    value: function warn() {\n      this._log('warn', (_util || _load_util()).format.apply(undefined, arguments));\n    }\n  }, {\n    key: \"getBuffer\",\n    value: function getBuffer() {\n      return null;\n    }\n  }]);\n  return CustomConsole;\n}((_console || _load_console()).Console);\nexports.default = CustomConsole;","map":null,"metadata":{},"sourceType":"script"}