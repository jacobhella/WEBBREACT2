{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = formatTestResults;\nvar formatResult = function formatResult(testResult, codeCoverageFormatter, reporter) {\n  var now = Date.now();\n  var output = {\n    assertionResults: [],\n    coverage: {},\n    endTime: now,\n    message: '',\n    name: testResult.testFilePath,\n    startTime: now,\n    status: 'failed',\n    summary: ''\n  };\n  if (testResult.testExecError) {\n    output.message = testResult.testExecError.message;\n    output.coverage = {};\n  } else {\n    var allTestsPassed = testResult.numFailingTests === 0;\n    output.status = allTestsPassed ? 'passed' : 'failed';\n    output.startTime = testResult.perfStats.start;\n    output.endTime = testResult.perfStats.end;\n    output.coverage = codeCoverageFormatter(testResult.coverage, reporter);\n  }\n  output.assertionResults = testResult.testResults.map(formatTestAssertion);\n  if (testResult.failureMessage) {\n    output.message = testResult.failureMessage;\n  }\n  return output;\n};\n/**\n * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n */\n\nfunction formatTestAssertion(assertion) {\n  var result = {\n    ancestorTitles: assertion.ancestorTitles,\n    failureMessages: null,\n    fullName: assertion.fullName,\n    location: assertion.location,\n    status: assertion.status,\n    title: assertion.title\n  };\n  if (assertion.failureMessages) {\n    result.failureMessages = assertion.failureMessages;\n  }\n  return result;\n}\nfunction formatTestResults(results, codeCoverageFormatter, reporter) {\n  var formatter = codeCoverageFormatter || function (coverage) {\n    return coverage;\n  };\n  var testResults = results.testResults.map(function (testResult) {\n    return formatResult(testResult, formatter, reporter);\n  });\n  return Object.assign(Object.create(null), results, {\n    testResults: testResults\n  });\n}","map":null,"metadata":{},"sourceType":"script"}