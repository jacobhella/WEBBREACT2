{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar _constants;\nfunction _load_constants() {\n  return _constants = require('../constants');\n}\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n */\nvar Prompt = /*#__PURE__*/function () {\n  function Prompt() {\n    _classCallCheck(this, Prompt);\n    this._onResize = this._onResize.bind(this);\n  }\n  _createClass(Prompt, [{\n    key: \"_onResize\",\n    value: function _onResize() {\n      this._onChange(this._value);\n    }\n  }, {\n    key: \"enter\",\n    value: function enter(onChange, onSuccess, onCancel) {\n      var _this = this;\n      this._entering = true;\n      this._value = '';\n      this._onSuccess = onSuccess;\n      this._onCancel = onCancel;\n      this._selection = null;\n      this._offset = -1;\n      this._promptLength = 0;\n      this._onChange = function () {\n        return onChange(_this._value, {\n          max: 10,\n          offset: _this._offset\n        });\n      };\n      this._onChange();\n      process.stdout.on('resize', this._onResize);\n    }\n  }, {\n    key: \"setPromptLength\",\n    value: function setPromptLength(length) {\n      this._promptLength = length;\n    }\n  }, {\n    key: \"setPromptSelection\",\n    value: function setPromptSelection(selected) {\n      this._selection = selected;\n    }\n  }, {\n    key: \"put\",\n    value: function put(key) {\n      switch (key) {\n        case (_constants || _load_constants()).KEYS.ENTER:\n          this._entering = false;\n          this._onSuccess(this._selection || this._value);\n          this.abort();\n          break;\n        case (_constants || _load_constants()).KEYS.ESCAPE:\n          this._entering = false;\n          this._onCancel(this._value);\n          this.abort();\n          break;\n        case (_constants || _load_constants()).KEYS.ARROW_DOWN:\n          this._offset = Math.min(this._offset + 1, this._promptLength - 1);\n          this._onChange();\n          break;\n        case (_constants || _load_constants()).KEYS.ARROW_UP:\n          this._offset = Math.max(this._offset - 1, -1);\n          this._onChange();\n          break;\n        case (_constants || _load_constants()).KEYS.ARROW_LEFT:\n        case (_constants || _load_constants()).KEYS.ARROW_RIGHT:\n          break;\n        default:\n          this._value = key === (_constants || _load_constants()).KEYS.BACKSPACE ? this._value.slice(0, -1) : this._value + key;\n          this._offset = -1;\n          this._selection = null;\n          this._onChange();\n          break;\n      }\n    }\n  }, {\n    key: \"abort\",\n    value: function abort() {\n      this._entering = false;\n      this._value = '';\n      process.stdout.removeListener('resize', this._onResize);\n    }\n  }, {\n    key: \"isEntering\",\n    value: function isEntering() {\n      return this._entering;\n    }\n  }]);\n  return Prompt;\n}();\nexports.default = Prompt;","map":null,"metadata":{},"sourceType":"script"}