{"ast":null,"code":"/*\n Copyright 2012-2015, Yahoo Inc.\n Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar INDENT = '  ';\n\n/**\n * a utility class to produce well-formed, indented XML\n * @param {ContentWriter} contentWriter the content writer that this utility wraps\n * @constructor\n */\nfunction XMLWriter(contentWriter) {\n  this.cw = contentWriter;\n  this.stack = [];\n}\nfunction attrString(attrs) {\n  if (!attrs) {\n    return '';\n  }\n  var ret = [];\n  Object.keys(attrs).forEach(function (k) {\n    var v = attrs[k];\n    ret.push(k + '=\"' + v + '\"');\n  });\n  return ret.length === 0 ? '' : ' ' + ret.join(' ');\n}\nXMLWriter.prototype.indent = function (str) {\n  return this.stack.map(function () {\n    return INDENT;\n  }).join('') + str;\n};\n\n/**\n * writes the opening XML tag with the supplied attributes\n * @param {String} name tag name\n * @param {Object} [attrs=null] attrs attributes for the tag\n */\nXMLWriter.prototype.openTag = function (name, attrs) {\n  var str = this.indent('<' + name + attrString(attrs) + '>');\n  this.cw.println(str);\n  this.stack.push(name);\n};\n\n/**\n * closes an open XML tag.\n * @param {String} name - tag name to close. This must match the writer's\n *  notion of the tag that is currently open.\n */\nXMLWriter.prototype.closeTag = function (name) {\n  if (this.stack.length === 0) {\n    throw new Error('Attempt to close tag ' + name + ' when not opened');\n  }\n  var stashed = this.stack.pop(),\n    str = '</' + name + '>';\n  if (stashed !== name) {\n    throw new Error('Attempt to close tag ' + name + ' when ' + stashed + ' was the one open');\n  }\n  this.cw.println(this.indent(str));\n};\n/**\n * writes a tag and its value opening and closing it at the same time\n * @param {String} name tag name\n * @param {Object} [attrs=null] attrs tag attributes\n * @param {String} [content=null] content optional tag content\n */\nXMLWriter.prototype.inlineTag = function (name, attrs, content) {\n  var str = '<' + name + attrString(attrs);\n  if (content) {\n    str += '>' + content + '</' + name + '>';\n  } else {\n    str += '/>';\n  }\n  str = this.indent(str);\n  this.cw.println(str);\n};\n/**\n * closes all open tags and ends the document\n */\nXMLWriter.prototype.closeAll = function () {\n  var that = this;\n  this.stack.slice().reverse().forEach(function (name) {\n    that.closeTag(name);\n  });\n};\nmodule.exports = XMLWriter;","map":null,"metadata":{},"sourceType":"script"}