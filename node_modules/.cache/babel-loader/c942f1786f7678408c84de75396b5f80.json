{"ast":null,"code":"'use strict';\n\nvar path = require('path');\nvar pathExists = require('path-exists');\nvar Promise = require('pinkie-promise');\nfunction splitPath(x) {\n  return path.resolve(x || '').split(path.sep);\n}\nfunction join(parts, filename) {\n  return path.resolve(parts.join(path.sep) + path.sep, filename);\n}\nmodule.exports = function (filename, opts) {\n  opts = opts || {};\n  var parts = splitPath(opts.cwd);\n  return new Promise(function (resolve) {\n    (function find() {\n      var fp = join(parts, filename);\n      pathExists(fp).then(function (exists) {\n        if (exists) {\n          resolve(fp);\n        } else if (parts.pop()) {\n          find();\n        } else {\n          resolve(null);\n        }\n      });\n    })();\n  });\n};\nmodule.exports.sync = function (filename, opts) {\n  opts = opts || {};\n  var parts = splitPath(opts.cwd);\n  var len = parts.length;\n  while (len--) {\n    var fp = join(parts, filename);\n    if (pathExists.sync(fp)) {\n      return fp;\n    }\n    parts.pop();\n  }\n  return null;\n};","map":null,"metadata":{},"sourceType":"script"}