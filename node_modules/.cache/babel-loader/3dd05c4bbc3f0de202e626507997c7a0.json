{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.CodeGenerator = undefined;\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\nvar _inherits3 = _interopRequireDefault(_inherits2);\nexports.default = function (ast, opts, code) {\n  var gen = new Generator(ast, opts, code);\n  return gen.generate();\n};\nvar _detectIndent = require(\"detect-indent\");\nvar _detectIndent2 = _interopRequireDefault(_detectIndent);\nvar _sourceMap = require(\"./source-map\");\nvar _sourceMap2 = _interopRequireDefault(_sourceMap);\nvar _babelMessages = require(\"babel-messages\");\nvar messages = _interopRequireWildcard(_babelMessages);\nvar _printer = require(\"./printer\");\nvar _printer2 = _interopRequireDefault(_printer);\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar Generator = function (_Printer) {\n  (0, _inherits3.default)(Generator, _Printer);\n  function Generator(ast) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var code = arguments[2];\n    (0, _classCallCheck3.default)(this, Generator);\n    var tokens = ast.tokens || [];\n    var format = normalizeOptions(code, opts, tokens);\n    var map = opts.sourceMaps ? new _sourceMap2.default(opts, code) : null;\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Printer.call(this, format, map, tokens));\n    _this.ast = ast;\n    return _this;\n  }\n  Generator.prototype.generate = function generate() {\n    return _Printer.prototype.generate.call(this, this.ast);\n  };\n  return Generator;\n}(_printer2.default);\nfunction normalizeOptions(code, opts, tokens) {\n  var style = \"  \";\n  if (code && typeof code === \"string\") {\n    var indent = (0, _detectIndent2.default)(code).indent;\n    if (indent && indent !== \" \") style = indent;\n  }\n  var format = {\n    auxiliaryCommentBefore: opts.auxiliaryCommentBefore,\n    auxiliaryCommentAfter: opts.auxiliaryCommentAfter,\n    shouldPrintComment: opts.shouldPrintComment,\n    retainLines: opts.retainLines,\n    retainFunctionParens: opts.retainFunctionParens,\n    comments: opts.comments == null || opts.comments,\n    compact: opts.compact,\n    minified: opts.minified,\n    concise: opts.concise,\n    quotes: opts.quotes || findCommonStringDelimiter(code, tokens),\n    jsonCompatibleStrings: opts.jsonCompatibleStrings,\n    indent: {\n      adjustMultilineComment: true,\n      style: style,\n      base: 0\n    },\n    flowCommaSeparator: opts.flowCommaSeparator\n  };\n  if (format.minified) {\n    format.compact = true;\n    format.shouldPrintComment = format.shouldPrintComment || function () {\n      return format.comments;\n    };\n  } else {\n    format.shouldPrintComment = format.shouldPrintComment || function (value) {\n      return format.comments || value.indexOf(\"@license\") >= 0 || value.indexOf(\"@preserve\") >= 0;\n    };\n  }\n  if (format.compact === \"auto\") {\n    format.compact = code.length > 500000;\n    if (format.compact) {\n      console.error(\"[BABEL] \" + messages.get(\"codeGeneratorDeopt\", opts.filename, \"500KB\"));\n    }\n  }\n  if (format.compact) {\n    format.indent.adjustMultilineComment = false;\n  }\n  return format;\n}\nfunction findCommonStringDelimiter(code, tokens) {\n  var DEFAULT_STRING_DELIMITER = \"double\";\n  if (!code) {\n    return DEFAULT_STRING_DELIMITER;\n  }\n  var occurrences = {\n    single: 0,\n    double: 0\n  };\n  var checked = 0;\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n    if (token.type.label !== \"string\") continue;\n    var raw = code.slice(token.start, token.end);\n    if (raw[0] === \"'\") {\n      occurrences.single++;\n    } else {\n      occurrences.double++;\n    }\n    checked++;\n    if (checked >= 3) break;\n  }\n  if (occurrences.single > occurrences.double) {\n    return \"single\";\n  } else {\n    return \"double\";\n  }\n}\nvar CodeGenerator = exports.CodeGenerator = function () {\n  function CodeGenerator(ast, opts, code) {\n    (0, _classCallCheck3.default)(this, CodeGenerator);\n    this._generator = new Generator(ast, opts, code);\n  }\n  CodeGenerator.prototype.generate = function generate() {\n    return this._generator.generate();\n  };\n  return CodeGenerator;\n}();","map":null,"metadata":{},"sourceType":"script"}