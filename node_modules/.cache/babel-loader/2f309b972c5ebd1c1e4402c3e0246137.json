{"ast":null,"code":"/*\n Copyright 2012-2015, Yahoo Inc.\n Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar Reporter = require('./reporter'),\n  fs = require('fs'),\n  filesFor = require('./file-matcher').filesFor,\n  libCoverage = require('istanbul-lib-coverage');\nfunction run(formats, config, opts, callback) {\n  if (!callback && typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n  var root,\n    coverageMap = libCoverage.createCoverageMap(),\n    includePattern = opts.include || '**/coverage*.raw.json',\n    reporter = new Reporter(config);\n  if (!formats || formats.length === 0) {\n    formats = config.reporting.reports();\n  }\n  try {\n    reporter.addAll(formats);\n  } catch (ex) {\n    ex.inputError = true;\n    return callback(ex);\n  }\n  root = opts.root || process.cwd();\n  filesFor({\n    root: root,\n    includes: [includePattern]\n  }, function (err, files) {\n    /* istanbul ignore if */\n    if (err) {\n      return callback(err);\n    }\n    files.forEach(function (file) {\n      var coverageObject = JSON.parse(fs.readFileSync(file, 'utf8'));\n      coverageMap.merge(coverageObject);\n    });\n    reporter.write(coverageMap, {});\n    return callback();\n  });\n}\nmodule.exports = {\n  run: run\n};","map":null,"metadata":{},"sourceType":"script"}