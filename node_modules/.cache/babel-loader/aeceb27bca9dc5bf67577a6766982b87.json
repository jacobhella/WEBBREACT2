{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar _jestWatcher;\nfunction _load_jestWatcher() {\n  return _jestWatcher = require('jest-watcher');\n}\nvar _SnapshotInteractiveMode;\nfunction _load_SnapshotInteractiveMode() {\n  return _SnapshotInteractiveMode = _interopRequireDefault(require('../SnapshotInteractiveMode'));\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar UpdateSnapshotInteractivePlugin = /*#__PURE__*/function (_BaseWatchPlugin) {\n  _inherits(UpdateSnapshotInteractivePlugin, _BaseWatchPlugin);\n  function UpdateSnapshotInteractivePlugin(options) {\n    var _this;\n    _classCallCheck(this, UpdateSnapshotInteractivePlugin);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UpdateSnapshotInteractivePlugin).call(this, options));\n    _this._failedSnapshotTestAssertions = [];\n    _this._snapshotInteractiveMode = new (_SnapshotInteractiveMode || _load_SnapshotInteractiveMode()).default(_this._stdout);\n    _this.isInternal = true;\n    return _this;\n  }\n  _createClass(UpdateSnapshotInteractivePlugin, [{\n    key: \"getFailedSnapshotTestAssertions\",\n    value: function getFailedSnapshotTestAssertions(testResults) {\n      var failedTestPaths = [];\n      if (testResults.numFailedTests === 0 || !testResults.testResults) {\n        return failedTestPaths;\n      }\n      testResults.testResults.forEach(function (testResult) {\n        if (testResult.snapshot && testResult.snapshot.unmatched) {\n          testResult.testResults.forEach(function (result) {\n            if (result.status === 'failed') {\n              failedTestPaths.push({\n                fullName: result.fullName,\n                path: testResult.testFilePath\n              });\n            }\n          });\n        }\n      });\n      return failedTestPaths;\n    }\n  }, {\n    key: \"apply\",\n    value: function apply(hooks) {\n      var _this2 = this;\n      hooks.onTestRunComplete(function (results) {\n        _this2._failedSnapshotTestAssertions = _this2.getFailedSnapshotTestAssertions(results);\n        if (_this2._snapshotInteractiveMode.isActive()) {\n          _this2._snapshotInteractiveMode.updateWithResults(results);\n        }\n      });\n    }\n  }, {\n    key: \"onKey\",\n    value: function onKey(key) {\n      if (this._snapshotInteractiveMode.isActive()) {\n        this._snapshotInteractiveMode.put(key);\n      }\n    }\n  }, {\n    key: \"run\",\n    value: function run(globalConfig, updateConfigAndRun) {\n      var _this3 = this;\n      if (this._failedSnapshotTestAssertions.length) {\n        return new Promise(function (res) {\n          _this3._snapshotInteractiveMode.run(_this3._failedSnapshotTestAssertions, function (assertion, shouldUpdateSnapshot) {\n            updateConfigAndRun({\n              mode: 'watch',\n              testNamePattern: assertion ? \"^\".concat(assertion.fullName, \"$\") : '',\n              testPathPattern: assertion ? assertion.path : '',\n              updateSnapshot: shouldUpdateSnapshot ? 'all' : 'none'\n            });\n            if (!_this3._snapshotInteractiveMode.isActive()) {\n              res();\n            }\n          });\n        });\n      } else {\n        return Promise.resolve();\n      }\n    }\n  }, {\n    key: \"getUsageInfo\",\n    value: function getUsageInfo(globalConfig) {\n      if (this._failedSnapshotTestAssertions && this._failedSnapshotTestAssertions.length > 0) {\n        return {\n          key: 'i',\n          prompt: 'update failing snapshots interactively'\n        };\n      }\n      return null;\n    }\n  }]);\n  return UpdateSnapshotInteractivePlugin;\n}((_jestWatcher || _load_jestWatcher()).BaseWatchPlugin);\n/**\n * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n */\nexports.default = UpdateSnapshotInteractivePlugin;","map":null,"metadata":{},"sourceType":"script"}