{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar _jestRegexUtil;\nfunction _load_jestRegexUtil() {\n  return _jestRegexUtil = require('jest-regex-util');\n}\nexports.default = function (globalConfig, options) {\n  // $FlowFixMe Object.assign\n  var newConfig = Object.assign({}, globalConfig);\n  if (!options) {\n    options = {};\n  }\n  if (options.mode === 'watch') {\n    newConfig.watch = true;\n    newConfig.watchAll = false;\n  } else if (options.mode === 'watchAll') {\n    newConfig.watch = false;\n    newConfig.watchAll = true;\n  }\n  if (options.testNamePattern !== undefined) {\n    newConfig.testNamePattern = options.testNamePattern || '';\n  }\n  if (options.testPathPattern !== undefined) {\n    newConfig.testPathPattern = (0, (_jestRegexUtil || _load_jestRegexUtil()).replacePathSepForRegex)(options.testPathPattern) || '';\n  }\n  newConfig.onlyChanged = false;\n  newConfig.onlyChanged = !newConfig.watchAll && !newConfig.testNamePattern && !newConfig.testPathPattern;\n  if (options.bail !== undefined) {\n    newConfig.bail = options.bail || false;\n  }\n  if (options.changedSince !== undefined) {\n    newConfig.changedSince = options.changedSince;\n  }\n  if (options.collectCoverage !== undefined) {\n    newConfig.collectCoverage = options.collectCoverage || false;\n  }\n  if (options.collectCoverageFrom !== undefined) {\n    newConfig.collectCoverageFrom = options.collectCoverageFrom;\n  }\n  if (options.collectCoverageOnlyFrom !== undefined) {\n    newConfig.collectCoverageOnlyFrom = options.collectCoverageOnlyFrom;\n  }\n  if (options.coverageDirectory !== undefined) {\n    newConfig.coverageDirectory = options.coverageDirectory;\n  }\n  if (options.coverageReporters !== undefined) {\n    newConfig.coverageReporters = options.coverageReporters;\n  }\n  if (options.noSCM) {\n    newConfig.noSCM = true;\n  }\n  if (options.notify !== undefined) {\n    newConfig.notify = options.notify || false;\n  }\n  if (options.notifyMode !== undefined) {\n    newConfig.notifyMode = options.notifyMode;\n  }\n  if (options.onlyFailures !== undefined) {\n    newConfig.onlyFailures = options.onlyFailures || false;\n  }\n  if (options.passWithNoTests !== undefined) {\n    newConfig.passWithNoTests = true;\n  }\n  if (options.reporters !== undefined) {\n    newConfig.reporters = options.reporters;\n  }\n  if (options.updateSnapshot !== undefined) {\n    newConfig.updateSnapshot = options.updateSnapshot;\n  }\n  if (options.verbose !== undefined) {\n    newConfig.verbose = options.verbose || false;\n  }\n  return Object.freeze(newConfig);\n};\n/**\n * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n */","map":null,"metadata":{},"sourceType":"script"}