{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar _default_config;\nfunction _load_default_config() {\n  return _default_config = _interopRequireDefault(require('./default_config'));\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n */\n\nvar hasDeprecationWarnings = false;\nvar shouldSkipValidationForPath = function shouldSkipValidationForPath(path, key, blacklist) {\n  return blacklist ? blacklist.includes([].concat(_toConsumableArray(path), [key]).join('.')) : false;\n};\nvar _validate = function _validate(config, exampleConfig, options) {\n  var path = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  if (typeof config !== 'object' || config == null || typeof exampleConfig !== 'object' || exampleConfig == null) {\n    return {\n      hasDeprecationWarnings: hasDeprecationWarnings\n    };\n  }\n  for (var key in config) {\n    if (options.deprecatedConfig && key in options.deprecatedConfig && typeof options.deprecate === 'function') {\n      var isDeprecatedKey = options.deprecate(config, key, options.deprecatedConfig, options);\n      hasDeprecationWarnings = hasDeprecationWarnings || isDeprecatedKey;\n    } else if (hasOwnProperty.call(exampleConfig, key)) {\n      if (typeof options.condition === 'function' && typeof options.error === 'function' && !options.condition(config[key], exampleConfig[key])) {\n        options.error(key, config[key], exampleConfig[key], options, path);\n      }\n    } else if (shouldSkipValidationForPath(path, key, options.recursiveBlacklist)) {\n      // skip validating unknown options inside blacklisted paths\n    } else {\n      options.unknown && options.unknown(config, exampleConfig, key, options, path);\n    }\n    if (options.recursive && !Array.isArray(exampleConfig[key]) && options.recursiveBlacklist && !shouldSkipValidationForPath(path, key, options.recursiveBlacklist)) {\n      _validate(config[key], exampleConfig[key], options, [].concat(_toConsumableArray(path), [key]));\n    }\n  }\n  return {\n    hasDeprecationWarnings: hasDeprecationWarnings\n  };\n};\nvar validate = function validate(config, options) {\n  hasDeprecationWarnings = false;\n  var defaultedOptions = Object.assign({}, (_default_config || _load_default_config()).default, options, {\n    title: Object.assign({}, (_default_config || _load_default_config()).default.title, options.title)\n  });\n  var _validate2 = _validate(config, options.exampleConfig, defaultedOptions);\n  var hdw = _validate2.hasDeprecationWarnings;\n  return {\n    hasDeprecationWarnings: hdw,\n    isValid: true\n  };\n};\nexports.default = validate;","map":null,"metadata":{},"sourceType":"script"}