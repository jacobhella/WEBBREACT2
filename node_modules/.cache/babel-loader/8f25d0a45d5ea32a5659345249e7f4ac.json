{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"C:\\\\Users\\\\legoj\\\\OneDrive\\\\Dokument\\\\Uni\\\\VT 2023\\\\Webbteknik\\\\hemsidan\\\\reactp\\\\myprojectapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\nvar color = require('kleur');\nvar Prompt = require('./prompt');\nvar _require = require('sisteransi');\nvar cursor = _require.cursor;\nvar _require2 = require('../util');\nvar clear = _require2.clear,\n  figures = _require2.figures,\n  style = _require2.style;\n\n/**\n * MultiselectPrompt Base Element\n * @param {Object} opts Options\n * @param {String} opts.message Message\n * @param {Array} opts.choices Array of choice objects\n * @param {String} [opts.hint] Hint to display\n * @param {Number} [opts.cursor=0] Cursor start position\n * @param {Number} [opts.max] Max choices\n */\nvar MultiselectPrompt = /*#__PURE__*/function (_Prompt) {\n  _inherits(MultiselectPrompt, _Prompt);\n  function MultiselectPrompt() {\n    var _this;\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, MultiselectPrompt);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiselectPrompt).call(this, opts));\n    _this.msg = opts.message;\n    _this.cursor = opts.cursor || 0;\n    _this.hint = opts.hint || '- Space to select. Return to submit';\n    _this.maxChoices = opts.max;\n    _this.value = opts.choices.map(function (v) {\n      return Object.assign({\n        title: v.value,\n        selected: false\n      }, v);\n    });\n    _this.clear = clear('');\n    _this.render(true);\n    return _this;\n  }\n  _createClass(MultiselectPrompt, [{\n    key: \"reset\",\n    value: function reset() {\n      this.value.map(function (v) {\n        return !v.selected;\n      });\n      this.cursor = 0;\n      this.fire();\n      this.render();\n    }\n  }, {\n    key: \"selected\",\n    value: function selected() {\n      return this.value.filter(function (v) {\n        return v.selected;\n      });\n    }\n  }, {\n    key: \"abort\",\n    value: function abort() {\n      this.done = this.aborted = true;\n      this.fire();\n      this.render();\n      this.out.write('\\n');\n      this.close();\n    }\n  }, {\n    key: \"submit\",\n    value: function submit() {\n      this.done = true;\n      this.aborted = false;\n      this.fire();\n      this.render();\n      this.out.write('\\n');\n      this.close();\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      this.cursor = 0;\n      this.render();\n    }\n  }, {\n    key: \"last\",\n    value: function last() {\n      this.cursor = this.value.length - 1;\n      this.render();\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      this.cursor = (this.cursor + 1) % this.value.length;\n      this.render();\n    }\n  }, {\n    key: \"up\",\n    value: function up() {\n      if (this.cursor === 0) return this.bell();\n      this.cursor--;\n      this.render();\n    }\n  }, {\n    key: \"down\",\n    value: function down() {\n      if (this.cursor === this.value.length - 1) return this.bell();\n      this.cursor++;\n      this.render();\n    }\n  }, {\n    key: \"left\",\n    value: function left() {\n      this.value[this.cursor].selected = false;\n      this.render();\n    }\n  }, {\n    key: \"right\",\n    value: function right() {\n      if (this.value.filter(function (e) {\n        return e.selected;\n      }).length >= this.maxChoices) return this.bell();\n      this.value[this.cursor].selected = true;\n      this.render();\n    }\n  }, {\n    key: \"_\",\n    value: function _(c, key) {\n      if (c !== ' ') return this.bell();\n      var v = this.value[this.cursor];\n      if (v.selected) {\n        v.selected = false;\n        this.render();\n      } else if (this.value.filter(function (e) {\n        return e.selected;\n      }).length >= this.maxChoices) {\n        return this.bell();\n      } else {\n        v.selected = true;\n        this.render();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render(first) {\n      if (first) this.out.write(cursor.hide);\n\n      // print prompt\n      var selected = this.value.filter(function (e) {\n        return e.selected;\n      }).map(function (v) {\n        return v.title;\n      }).join(', ');\n      var prompt = [style.symbol(this.done, this.aborted), color.bold(this.msg), style.delimiter(false), this.done ? selected : color.gray(this.hint)].join(' ');\n\n      // print choices\n      if (!this.done) {\n        var c = this.cursor;\n        prompt += '\\n' + this.value.map(function (v, i) {\n          return (v.selected ? color.green(figures.tick) : ' ') + ' ' + (c === i ? color.cyan.underline(v.title) : v.title);\n        }).join('\\n');\n      }\n      this.out.write(this.clear + prompt);\n      this.clear = clear(prompt);\n    }\n  }]);\n  return MultiselectPrompt;\n}(Prompt);\nmodule.exports = MultiselectPrompt;","map":null,"metadata":{},"sourceType":"script"}