{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nvar _symbol = require(\"babel-runtime/core-js/symbol\");\nvar _symbol2 = _interopRequireDefault(_symbol);\nexports.default = function (code, opts) {\n  var stack = void 0;\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      stack = error.stack.split(\"\\n\").slice(1).join(\"\\n\");\n    }\n  }\n  opts = (0, _assign2.default)({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    preserveComments: false\n  }, opts);\n  var _getAst = function getAst() {\n    var ast = void 0;\n    try {\n      ast = babylon.parse(code, opts);\n      ast = _babelTraverse2.default.removeProperties(ast, {\n        preserveComments: opts.preserveComments\n      });\n      _babelTraverse2.default.cheap(ast, function (node) {\n        node[FROM_TEMPLATE] = true;\n      });\n    } catch (err) {\n      err.stack = err.stack + \"from\\n\" + stack;\n      throw err;\n    }\n    _getAst = function getAst() {\n      return ast;\n    };\n    return ast;\n  };\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return useTemplate(_getAst(), args);\n  };\n};\nvar _cloneDeep = require(\"lodash/cloneDeep\");\nvar _cloneDeep2 = _interopRequireDefault(_cloneDeep);\nvar _assign = require(\"lodash/assign\");\nvar _assign2 = _interopRequireDefault(_assign);\nvar _has = require(\"lodash/has\");\nvar _has2 = _interopRequireDefault(_has);\nvar _babelTraverse = require(\"babel-traverse\");\nvar _babelTraverse2 = _interopRequireDefault(_babelTraverse);\nvar _babylon = require(\"babylon\");\nvar babylon = _interopRequireWildcard(_babylon);\nvar _babelTypes = require(\"babel-types\");\nvar t = _interopRequireWildcard(_babelTypes);\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar FROM_TEMPLATE = \"_fromTemplate\";\nvar TEMPLATE_SKIP = (0, _symbol2.default)();\nfunction useTemplate(ast, nodes) {\n  ast = (0, _cloneDeep2.default)(ast);\n  var _ast = ast,\n    program = _ast.program;\n  if (nodes.length) {\n    (0, _babelTraverse2.default)(ast, templateVisitor, null, nodes);\n  }\n  if (program.body.length > 1) {\n    return program.body;\n  } else {\n    return program.body[0];\n  }\n}\nvar templateVisitor = {\n  noScope: true,\n  enter: function enter(path, args) {\n    var node = path.node;\n    if (node[TEMPLATE_SKIP]) return path.skip();\n    if (t.isExpressionStatement(node)) {\n      node = node.expression;\n    }\n    var replacement = void 0;\n    if (t.isIdentifier(node) && node[FROM_TEMPLATE]) {\n      if ((0, _has2.default)(args[0], node.name)) {\n        replacement = args[0][node.name];\n      } else if (node.name[0] === \"$\") {\n        var i = +node.name.slice(1);\n        if (args[i]) replacement = args[i];\n      }\n    }\n    if (replacement === null) {\n      path.remove();\n    }\n    if (replacement) {\n      replacement[TEMPLATE_SKIP] = true;\n      path.replaceInline(replacement);\n    }\n  },\n  exit: function exit(_ref) {\n    var node = _ref.node;\n    if (!node.loc) _babelTraverse2.default.clearNode(node);\n  }\n};\nmodule.exports = exports[\"default\"];","map":null,"metadata":{},"sourceType":"script"}