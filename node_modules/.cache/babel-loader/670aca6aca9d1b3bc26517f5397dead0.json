{"ast":null,"code":"'use strict';\n\nvar path = require('path');\nvar which = require('which');\nvar pathKey = require('path-key')();\nfunction resolveCommandAttempt(parsed, withoutPathExt) {\n  var cwd = process.cwd();\n  var hasCustomCwd = parsed.options.cwd != null;\n\n  // If a custom `cwd` was specified, we need to change the process cwd\n  // because `which` will do stat calls but does not support a custom cwd\n  if (hasCustomCwd) {\n    try {\n      process.chdir(parsed.options.cwd);\n    } catch (err) {\n      /* Empty */\n    }\n  }\n  var resolved;\n  try {\n    resolved = which.sync(parsed.command, {\n      path: (parsed.options.env || process.env)[pathKey],\n      pathExt: withoutPathExt ? path.delimiter : undefined\n    });\n  } catch (e) {\n    /* Empty */\n  } finally {\n    process.chdir(cwd);\n  }\n\n  // If we successfully resolved, ensure that an absolute path is returned\n  // Note that when a custom `cwd` was used, we need to resolve to an absolute path based on it\n  if (resolved) {\n    resolved = path.resolve(hasCustomCwd ? parsed.options.cwd : '', resolved);\n  }\n  return resolved;\n}\nfunction resolveCommand(parsed) {\n  return resolveCommandAttempt(parsed) || resolveCommandAttempt(parsed, true);\n}\nmodule.exports = resolveCommand;","map":null,"metadata":{},"sourceType":"script"}